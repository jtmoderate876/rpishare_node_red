[
    {
        "id": "984823b1.a0823",
        "type": "tab",
        "label": "Insteon-mqtt",
        "disabled": false,
        "info": ""
    },
    {
        "id": "50466fda.5d00f",
        "type": "tab",
        "label": "Ecobee",
        "disabled": false
    },
    {
        "id": "88396424.c54498",
        "type": "tab",
        "label": "Rainforest",
        "disabled": false
    },
    {
        "id": "11aaf4c8.4bf33b",
        "type": "tab",
        "label": "MyQ",
        "disabled": false,
        "info": ""
    },
    {
        "id": "e8223701.eebbe8",
        "type": "tab",
        "label": "Wonderware",
        "disabled": false,
        "info": ""
    },
    {
        "id": "c201e10a.3d66f",
        "type": "tab",
        "label": "MQTT",
        "disabled": false,
        "info": ""
    },
    {
        "id": "55542e37.3222d",
        "type": "tab",
        "label": "my web pages",
        "disabled": false,
        "info": "Go to http://192.168.1.219:1880/mypage"
    },
    {
        "id": "46e74d68.bf9484",
        "type": "tab",
        "label": "DecodeSigfoxSensits",
        "disabled": false,
        "info": ""
    },
    {
        "id": "16be06b7.63eec9",
        "type": "tab",
        "label": "DecodeOleumTech",
        "disabled": false,
        "info": ""
    },
    {
        "id": "c6be1934.85f088",
        "type": "tab",
        "label": "DynIP to Google",
        "disabled": false,
        "info": " maintains the dynamic IP address\nfor tapiafamily.org\nby sending to domains.google.com"
    },
    {
        "id": "1fec4b90.1b56f4",
        "type": "tab",
        "label": "Jokes",
        "disabled": false,
        "info": ""
    },
    {
        "id": "5c25c3f4.74d4ac",
        "type": "tab",
        "label": "Insteon HUB direct",
        "disabled": true,
        "info": ""
    },
    {
        "id": "b208d8af.feaa98",
        "type": "subflow",
        "name": "Delay with Cancel",
        "info": "",
        "in": [],
        "out": []
    },
    {
        "id": "426235c9.70c80c",
        "type": "subflow",
        "name": "Iterate",
        "in": [
            {
                "x": 220,
                "y": 219,
                "wires": [
                    {
                        "id": "5c9778e1.615958"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 454,
                "y": 174,
                "wires": [
                    {
                        "id": "5c9778e1.615958",
                        "port": 0
                    }
                ]
            },
            {
                "x": 455,
                "y": 259,
                "wires": [
                    {
                        "id": "5c9778e1.615958",
                        "port": 1
                    }
                ]
            }
        ]
    },
    {
        "id": "eef3db45.68d418",
        "type": "subflow",
        "name": "auto-off insteon-mqtt dimmer (15 min default)",
        "info": "This will turn off an insteon-mqtt type\ndimmer light after the default 15 minutes\nor set msg.delay for a different number of\ninteger minutes.\n\nFeed this from an insteon-mqtt state topic\nfrom an mqtt broker\nfrom a DIMMER.\nThis is dimmer specific because a dimmer's\nstate is different than a switch,\ncontaining json such as:\n {\"state\": \"ON\", \"brightness\": 155)\nvs a switch with just \"ON\"\n\nit assumes the payload is a json-formatted\nstring so it first converts from string json\nto a json object.\n\nUser can again hit dimmer's on anytime during\nthe on period to restart timer\n(if they need more time, for example).\n\nFor efficiency, this cancels the timer if they\nturn off the dimmer so as not to unnecessarily\ncontinuing timer and sending off to an already\noff dimmer. ",
        "in": [
            {
                "x": 40,
                "y": 60,
                "wires": [
                    {
                        "id": "64277f76.76f6a"
                    }
                ]
            }
        ],
        "out": []
    },
    {
        "id": "971eda83.260398",
        "type": "mqtt-broker",
        "z": "",
        "name": "127.0.0.1:1883",
        "broker": "127.0.0.1",
        "port": "1883",
        "clientid": "",
        "usetls": false,
        "compatmode": true,
        "keepalive": "60",
        "cleansession": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthPayload": "",
        "closeTopic": "",
        "closeQos": "0",
        "closePayload": "",
        "willTopic": "",
        "willQos": "0",
        "willPayload": ""
    },
    {
        "id": "ccbad4df.c6e028",
        "type": "tls-config",
        "z": "",
        "name": "",
        "cert": "",
        "key": "",
        "ca": "",
        "certname": "",
        "keyname": "",
        "caname": "",
        "verifyservercert": true
    },
    {
        "id": "e7ec31a4.2aad",
        "type": "tls-config",
        "z": "",
        "name": "",
        "cert": "",
        "key": "",
        "ca": "",
        "verifyservercert": true
    },
    {
        "id": "34466473.e724fc",
        "type": "tls-config",
        "z": "",
        "name": "",
        "cert": "",
        "key": "",
        "ca": "",
        "verifyservercert": true
    },
    {
        "id": "27dbe3bb.c30aec",
        "type": "mqtt-broker",
        "z": "",
        "name": "",
        "broker": "broker.shiftr.io",
        "port": "8883",
        "tls": "34466473.e724fc",
        "clientid": "rpi-node-red-MQTTtoShiftrPage-4c318920",
        "usetls": true,
        "compatmode": true,
        "keepalive": "60",
        "cleansession": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthPayload": "",
        "closeTopic": "",
        "closePayload": "",
        "willTopic": "",
        "willQos": "0",
        "willPayload": ""
    },
    {
        "id": "71a47ab9.6044a4",
        "type": "mosca in",
        "z": "c201e10a.3d66f",
        "mqtt_port": 1883,
        "mqtt_ws_port": 8080,
        "name": "",
        "username": "",
        "password": "",
        "dburl": "",
        "x": 110,
        "y": 60,
        "wires": [
            [
                "a91c81d2.c3f96"
            ]
        ]
    },
    {
        "id": "a91c81d2.c3f96",
        "type": "debug",
        "z": "c201e10a.3d66f",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "x": 590,
        "y": 60,
        "wires": []
    },
    {
        "id": "f3af527a.844bd",
        "type": "mqtt in",
        "z": "c201e10a.3d66f",
        "name": "Monitor # on above MQTT broker",
        "topic": "#",
        "qos": "2",
        "broker": "971eda83.260398",
        "x": 150,
        "y": 100,
        "wires": [
            [
                "dd27af28.c2e8e"
            ]
        ]
    },
    {
        "id": "dd27af28.c2e8e",
        "type": "debug",
        "z": "c201e10a.3d66f",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "x": 590,
        "y": 100,
        "wires": []
    },
    {
        "id": "15b181a6.203d6e",
        "type": "inject",
        "z": "b208d8af.feaa98",
        "name": "",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "repeat": "",
        "crontab": "",
        "once": false,
        "x": 120,
        "y": 40,
        "wires": [
            []
        ]
    },
    {
        "id": "8ed386e6.bb5ee8",
        "type": "inject",
        "z": "b208d8af.feaa98",
        "name": "",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "repeat": "",
        "crontab": "",
        "once": false,
        "x": 120,
        "y": 120,
        "wires": [
            []
        ]
    },
    {
        "id": "8be3061.65507f8",
        "type": "debug",
        "z": "b208d8af.feaa98",
        "name": "",
        "active": true,
        "console": "false",
        "complete": "false",
        "x": 750,
        "y": 40,
        "wires": []
    },
    {
        "id": "afed8ad3.8e59c8",
        "type": "trigger",
        "z": "b208d8af.feaa98",
        "op1": "1",
        "op2": "0",
        "op1type": "str",
        "op2type": "str",
        "duration": "250",
        "extend": false,
        "units": "ms",
        "reset": "",
        "name": "",
        "x": 243,
        "y": 78,
        "wires": [
            []
        ]
    },
    {
        "id": "6cb75772.883cc8",
        "type": "inject",
        "z": "88396424.c54498",
        "name": "Local Eagle request",
        "topic": "",
        "payload": "",
        "payloadType": "str",
        "repeat": "",
        "crontab": "",
        "once": false,
        "x": 130,
        "y": 100,
        "wires": [
            [
                "6c8ca6f9.edf128"
            ]
        ]
    },
    {
        "id": "21cc22c4.55b4ae",
        "type": "http request",
        "z": "88396424.c54498",
        "name": "",
        "method": "POST",
        "ret": "txt",
        "url": "https://rainforestcloud.com:9445/cgi-bin/post_manager",
        "tls": "e7ec31a4.2aad",
        "x": 290,
        "y": 180,
        "wires": [
            [
                "2bd6f5db.37729a"
            ]
        ]
    },
    {
        "id": "f4682478.b9e3f8",
        "type": "function",
        "z": "88396424.c54498",
        "name": "Format request",
        "func": "//Create Eagle command XML fragment\nvar command = \"<Command>\\n\";\ncommand += \"  <Name>get_instantaneous_demand</Name>\\n\";\ncommand += \"</Command>\\n\";\n\n//Modify header to include Gateway authentication\nif ((context.flow.Rainforest !== null) && (context.flow.Rainforest !== undefined) && (context.flow.Rainforest.headers !== null) && (context.flow.Rainforest.headers !== undefined)) {\n    msg.headers = context.flow.Rainforest.headers;\n    msg.payload = command;\n}\nelse {\n    msg = null;\n}\n\n\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 120,
        "y": 180,
        "wires": [
            [
                "21cc22c4.55b4ae"
            ]
        ]
    },
    {
        "id": "7ac1b8b0.a027a8",
        "type": "xml",
        "z": "88396424.c54498",
        "name": "",
        "attr": "",
        "chr": "",
        "x": 610,
        "y": 180,
        "wires": [
            [
                "868e0607.f251b8",
                "d501ec36.ee936"
            ]
        ]
    },
    {
        "id": "868e0607.f251b8",
        "type": "rbe",
        "z": "88396424.c54498",
        "name": "Ignore repeat values",
        "func": "rbe",
        "gap": "",
        "start": "",
        "x": 820,
        "y": 180,
        "wires": [
            [
                "dcc3af32.0832e"
            ]
        ]
    },
    {
        "id": "75a8294d.bbbfe8",
        "type": "http request",
        "z": "88396424.c54498",
        "name": "",
        "method": "POST",
        "ret": "txt",
        "url": "http://192.168.1.230/cgi-bin/post_manager",
        "tls": "",
        "x": 490,
        "y": 100,
        "wires": [
            [
                "2bd6f5db.37729a"
            ]
        ]
    },
    {
        "id": "6c8ca6f9.edf128",
        "type": "function",
        "z": "88396424.c54498",
        "name": "Format request",
        "func": "//Create Eagle command XML fragment\nvar command = \"<Command>\\n\";\ncommand += \"  <Name>get_instantaneous_demand</Name>\\n\";\n// adding jeff tapia's eagle mac:\ncommand += \"  <MacId>0xd8d5b90000005c9e</MacId>\\n\";\ncommand += \"</Command>\\n\";\n\nmsg.payload = command;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 320,
        "y": 100,
        "wires": [
            [
                "75a8294d.bbbfe8"
            ]
        ]
    },
    {
        "id": "20b8582b.62a488",
        "type": "inject",
        "z": "88396424.c54498",
        "name": "Rainforest Relay Gateway request",
        "topic": "",
        "payload": "",
        "payloadType": "str",
        "repeat": "20",
        "crontab": "",
        "once": false,
        "onceDelay": "",
        "x": 180,
        "y": 140,
        "wires": [
            [
                "f4682478.b9e3f8",
                "eb902a7c.cbc798"
            ]
        ]
    },
    {
        "id": "1730a5c2.46778a",
        "type": "inject",
        "z": "88396424.c54498",
        "name": "Reboot Eagle",
        "topic": "",
        "payload": "",
        "payloadType": "str",
        "repeat": "",
        "crontab": "",
        "once": false,
        "x": 130,
        "y": 380,
        "wires": [
            [
                "aecb869a.6a2788"
            ]
        ]
    },
    {
        "id": "aecb869a.6a2788",
        "type": "function",
        "z": "88396424.c54498",
        "name": "Format request",
        "func": "//Create Eagle command XML fragment\nvar command = \"<Command>\\n\";\ncommand += \"  <Name>reboot</Name>\\n\";\n// adding jeff tapia's eagle mac:\n//command += \"  <MacId>0xd8d5b90000005c9e</MacId>\\n\";\ncommand += \"  <Target>Eagle</Target>\\n\";\ncommand += \"</Command>\\n\";\n\n\n//Modify header to include Gateway authentication\nif ((context.flow.Rainforest !== null) && (context.flow.Rainforest !== undefined) && (context.flow.Rainforest.headers !== null) && (context.flow.Rainforest.headers !== undefined)) {\n    msg.headers = context.flow.Rainforest.headers;\n    msg.payload = command;\n}\nelse {\n    msg = null;\n}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 367,
        "y": 380,
        "wires": [
            [
                "c52ed3d0.50ab1"
            ]
        ]
    },
    {
        "id": "c52ed3d0.50ab1",
        "type": "http request",
        "z": "88396424.c54498",
        "name": "",
        "method": "POST",
        "ret": "txt",
        "url": "https://rainforestcloud.com:9445/cgi-bin/post_manager",
        "tls": "",
        "x": 550,
        "y": 380,
        "wires": [
            [
                "cb9e9993.cf95c8"
            ]
        ]
    },
    {
        "id": "cb9e9993.cf95c8",
        "type": "debug",
        "z": "88396424.c54498",
        "name": "",
        "active": true,
        "console": "false",
        "complete": "false",
        "x": 725,
        "y": 380,
        "wires": []
    },
    {
        "id": "d8d4385a.f6b1e8",
        "type": "function",
        "z": "88396424.c54498",
        "name": "Format request",
        "func": "//Create Eagle command XML fragment\nvar command = \"<Command>\\n\";\ncommand += \"  <Name>set_schedule</Name>\\n\";\n// adding jeff tapia's eagle mac:\n// command += \"  <MacId>0xd8d5b90000005c9e</MacId>\\n\";\ncommand += \"  <Event>demand</Event>\\n\";\ncommand += \"  <Frequency>5</Frequency>\\n\";\ncommand += \"  <Enabled>Y</Enabled>\\n\";\ncommand += \"</Command>\\n\";\n\n//Modify header to include Gateway authentication\nif ((context.flow.Rainforest !== null) && (context.flow.Rainforest !== undefined) && (context.flow.Rainforest.headers !== null) && (context.flow.Rainforest.headers !== undefined)) {\n    msg.headers = context.flow.Rainforest.headers;\n    msg.payload = command;\n}\nelse {\n    msg = null;\n}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 500,
        "y": 420,
        "wires": [
            [
                "73735df2.aaf524"
            ]
        ]
    },
    {
        "id": "40f6785f.136ee8",
        "type": "inject",
        "z": "88396424.c54498",
        "name": "Set Demand Poll Schedule to 5 seconds",
        "topic": "",
        "payload": "",
        "payloadType": "str",
        "repeat": "",
        "crontab": "",
        "once": false,
        "x": 220,
        "y": 420,
        "wires": [
            [
                "d8d4385a.f6b1e8"
            ]
        ]
    },
    {
        "id": "73735df2.aaf524",
        "type": "http request",
        "z": "88396424.c54498",
        "name": "",
        "method": "POST",
        "ret": "txt",
        "url": "https://rainforestcloud.com:9445/cgi-bin/post_manager",
        "tls": "",
        "x": 688,
        "y": 420,
        "wires": [
            [
                "548d883f.225e28"
            ]
        ]
    },
    {
        "id": "548d883f.225e28",
        "type": "debug",
        "z": "88396424.c54498",
        "name": "",
        "active": true,
        "console": "false",
        "complete": "false",
        "x": 860,
        "y": 420,
        "wires": []
    },
    {
        "id": "5a2dcb07.6baa74",
        "type": "inject",
        "z": "88396424.c54498",
        "name": "Get Schedule",
        "topic": "",
        "payload": "",
        "payloadType": "str",
        "repeat": "",
        "crontab": "",
        "once": false,
        "x": 130,
        "y": 460,
        "wires": [
            [
                "31162c53.6e96f4"
            ]
        ]
    },
    {
        "id": "31162c53.6e96f4",
        "type": "function",
        "z": "88396424.c54498",
        "name": "Format request",
        "func": "//Create Eagle command XML fragment\nvar command = \"<Command>\\n\";\ncommand += \"  <Name>get_schedule</Name>\\n\";\n// adding jeff tapia's eagle mac:\n// command += \"  <MacId>0xd8d5b90000005c9e</MacId>\\n\";\ncommand += \"  <Event>demand</Event>\\n\";\ncommand += \"</Command>\\n\";\n\n//Modify header to include Gateway authentication\nif ((context.flow.Rainforest !== null) && (context.flow.Rainforest !== undefined) && (context.flow.Rainforest.headers !== null) && (context.flow.Rainforest.headers !== undefined)) {\n    msg.headers = context.flow.Rainforest.headers;\n    msg.payload = command;\n}\nelse {\n    msg = null;\n}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 320,
        "y": 460,
        "wires": [
            [
                "b9effe4d.cdf4f"
            ]
        ]
    },
    {
        "id": "b9effe4d.cdf4f",
        "type": "http request",
        "z": "88396424.c54498",
        "name": "",
        "method": "POST",
        "ret": "txt",
        "url": "https://rainforestcloud.com:9445/cgi-bin/post_manager",
        "tls": "",
        "x": 490,
        "y": 460,
        "wires": [
            [
                "26359bd2.f695b4"
            ]
        ]
    },
    {
        "id": "dcc3af32.0832e",
        "type": "function",
        "z": "88396424.c54498",
        "name": "Calculate Demand Value",
        "func": "//ignore bad data\nif (!msg.payload.InstantaneousDemand) \n{\n    return;\n}\n\n//parse response\nstrDemand=msg.payload.InstantaneousDemand.Demand[0];\nintDemand=parseInt(strDemand,16);\n\nstrMultiplier=msg.payload.InstantaneousDemand.Multiplier[0];\nintMultiplier=parseInt(strMultiplier,16);\n\nstrDivisor=msg.payload.InstantaneousDemand.Divisor[0];\nintDivisor=parseInt(strDivisor,16);\n\nif (intDemand>2147483647) {\n    intDemand = 0;\n}\n\nif (intMultiplier===0) {\n    intMultiplier = 1;\n} \n\nif (intDivisor===0) {\n    intDivisor = 1;\n}\n\nmsg.payload = (intDemand * intMultiplier) / intDivisor;\nmsg.topic = \"power/consumption/instantaneous\";\n\n\nreturn msg;",
        "outputs": "1",
        "noerr": 0,
        "x": 450,
        "y": 220,
        "wires": [
            [
                "6575f545.23b7fc"
            ]
        ]
    },
    {
        "id": "d07c6ad.e3c7298",
        "type": "debug",
        "z": "88396424.c54498",
        "name": "",
        "active": true,
        "console": "false",
        "complete": "false",
        "x": 870,
        "y": 120,
        "wires": []
    },
    {
        "id": "2bd6f5db.37729a",
        "type": "function",
        "z": "88396424.c54498",
        "name": "Ignore bad data",
        "func": "//ignore bad data\nif (!msg.payload || msg.payload === null || msg.payload === '') \n{\n    return;\n} else {\n    msg.headers = null;// no use for HTTP headers\n    return msg;\n}",
        "outputs": 1,
        "noerr": 0,
        "x": 460,
        "y": 180,
        "wires": [
            [
                "7ac1b8b0.a027a8"
            ]
        ]
    },
    {
        "id": "26359bd2.f695b4",
        "type": "xml",
        "z": "88396424.c54498",
        "name": "",
        "attr": "",
        "chr": "",
        "x": 630,
        "y": 460,
        "wires": [
            [
                "d195ae4f.fde69"
            ]
        ]
    },
    {
        "id": "d195ae4f.fde69",
        "type": "function",
        "z": "88396424.c54498",
        "name": "Extract Value",
        "func": "msg.payload = \"Demand Polling set for: \" + msg.payload.ScheduleList.ScheduleInfo[0].Frequency[0] + \" secs\"\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 770,
        "y": 460,
        "wires": [
            [
                "872c5b0d.507928"
            ]
        ]
    },
    {
        "id": "f7b48679.4b0fa8",
        "type": "comment",
        "z": "88396424.c54498",
        "name": "Read Me: Notes (please retain these notes if distributing the flows)",
        "info": "Rainforest Automation Eagle\nAuthor: Mike Thompson, GitHub: mike-linus\nDate: 24/2/2016\nDate: 2017.05.05 modified byt jeff tapia\n\nThese examples show how to extract data and control the Rainforest Eagle using the recommended HTTP Rest API both locally and via the Internet Gateway.\n\nFor those of you trying to get the most out of the Rainforest Eagle, these example Node-Red flows should get you going. Having the flows in Node-Red opens up a huge range of automation possibilities. Enjoy :)\n\nTo use the flows:\n1. Modify the 'Format Request' function nodes to your specific credentials. For local requests, you need to add your own MAC address. For the Relay Gateway, the message headers need to be altered to your Gateway account.\n2. For all flows except the Gateway flow, modify the 'http request' nodes, tick  'use basic authentication?', add your 'Cloud ID' as the username, your 'Installation Code' as the password and your Eagle's IP address.\n3. For the Gateway flow, basic authentication is not used as the credentials are passed in the message header.\n4. To automate the flows, simply modify the 'inject node' to repeat at the required interval.\n5. To publish the data on a MQTT topic, just replace the debug node with an MQTT node.\n\nCreating your own commands simply requires creating the appropriate command string in the 'Format request' node. Refer to the Eagle Rest API documentation for more information.",
        "x": 240,
        "y": 20,
        "wires": []
    },
    {
        "id": "7c9661a8.3f7bb",
        "type": "http request",
        "z": "88396424.c54498",
        "name": "",
        "method": "POST",
        "ret": "txt",
        "url": "https://rainforestcloud.com:9445/cgi-bin/post_manager",
        "tls": "e7ec31a4.2aad",
        "x": 290,
        "y": 280,
        "wires": [
            [
                "2fed2a0a.50b9b6"
            ]
        ]
    },
    {
        "id": "8d06c412.0f3b88",
        "type": "function",
        "z": "88396424.c54498",
        "name": "Format request",
        "func": "//Create Eagle command XML fragment\nvar command = \"<Command>\\n\";\ncommand += \"  <Name>get_current_summation</Name>\\n\";\ncommand += \"</Command>\\n\";\n\n//Modify header to include Gateway authentication\nif ((context.flow.Rainforest !== null) && (context.flow.Rainforest !== undefined) && (context.flow.Rainforest.headers !== null) && (context.flow.Rainforest.headers !== undefined)) {\n    msg.headers = context.flow.Rainforest.headers;\n    msg.payload = command;\n}\nelse {\n    msg = null;\n}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 120,
        "y": 280,
        "wires": [
            [
                "7c9661a8.3f7bb"
            ]
        ]
    },
    {
        "id": "ec0d4a6f.6287e8",
        "type": "xml",
        "z": "88396424.c54498",
        "name": "",
        "attr": "",
        "chr": "",
        "x": 610,
        "y": 280,
        "wires": [
            [
                "60e6b007.5ffc4"
            ]
        ]
    },
    {
        "id": "60e6b007.5ffc4",
        "type": "rbe",
        "z": "88396424.c54498",
        "name": "Ignore repeat values",
        "func": "rbe",
        "gap": "",
        "start": "",
        "x": 780,
        "y": 280,
        "wires": [
            [
                "84797666.6772c8"
            ]
        ]
    },
    {
        "id": "84797666.6772c8",
        "type": "function",
        "z": "88396424.c54498",
        "name": "Calculate Consumption Total Value",
        "func": "//ignore bad data\nif (!msg.payload.CurrentSummation || msg.payload.CurrentSummation===null || msg.payloadCurrentSummation==='' )\n{\n    return;\n} else {\n\n    //parse response\n    strConsumptionTotal=msg.payload.CurrentSummation.SummationDelivered[0];\n    intConsumptionTotal=parseInt(strConsumptionTotal,16);\n    \n    strMultiplier=msg.payload.CurrentSummation.Multiplier[0];\n    intMultiplier=parseInt(strMultiplier,16);\n    \n    strDivisor=msg.payload.CurrentSummation.Divisor[0];\n    intDivisor=parseInt(strDivisor,16);\n    \n    if (intConsumptionTotal>2147483647) {\n        intConsumptionTotal = 0;\n    }\n    \n    if (intMultiplier===0) {\n        intMultiplier = 1;\n    } \n    \n    if (intDivisor===0) {\n        intDivisor = 1;\n    }\n    \n    msg.payload = (intConsumptionTotal * intMultiplier) / intDivisor;\n    msg.topic = \"power/consumption/total\";\n    \n    if (msg.payload === 0)\n    {\n        return;\n    } else {\n        return msg;\n    }\n}",
        "outputs": "1",
        "noerr": 0,
        "x": 520,
        "y": 320,
        "wires": [
            [
                "e1582874.335878"
            ]
        ]
    },
    {
        "id": "2fed2a0a.50b9b6",
        "type": "function",
        "z": "88396424.c54498",
        "name": "Ignore bad data",
        "func": "//ignore bad data\nif (!msg.payload || msg.payload === null || msg.payload === '') \n{\n    return;\n} else {\n    msg.headers = null;// no use for HTTP headers\n    return msg;\n}",
        "outputs": 1,
        "noerr": 0,
        "x": 460,
        "y": 280,
        "wires": [
            [
                "ec0d4a6f.6287e8"
            ]
        ]
    },
    {
        "id": "eb902a7c.cbc798",
        "type": "delay",
        "z": "88396424.c54498",
        "name": "",
        "pauseType": "rate",
        "timeout": "5",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "minute",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "x": 100,
        "y": 220,
        "wires": [
            [
                "8d06c412.0f3b88"
            ]
        ]
    },
    {
        "id": "d501ec36.ee936",
        "type": "function",
        "z": "88396424.c54498",
        "name": "Reboot after 20 Request Timeout",
        "func": "if (!context.get('count')) {\n    context.set('count',0);\n}\nvar i = context.get('count');\nif (!msg.payload.Error || msg.payload.Error===null || msg.payload.Error===''){\n    return;\n} else{\n    if (msg.payload.Error.Text == 'Request Timeout'){\n        i++;\n        msg.payload.i=i;\n        if (i>20){\n            context.set('count',0);\n            return [msg,{payload:true}];\n        } else {\n            context.set('count',i);\n            return [msg,null];\n        }\n    } else {\n        context.set('count',0);\n        msg.payload.MyText='Error Text did not evaluatate to \"Request Timeout\"';\n        return [msg,null];    \n    }\n    }\n",
        "outputs": "2",
        "noerr": 0,
        "x": 180,
        "y": 340,
        "wires": [
            [],
            [
                "aecb869a.6a2788",
                "d07c6ad.e3c7298"
            ]
        ]
    },
    {
        "id": "96a2c3b4.61f02",
        "type": "inject",
        "z": "50466fda.5d00f",
        "name": "Refresh Thermostat Data",
        "topic": "",
        "payload": "Refresh Thermostat Variables",
        "payloadType": "str",
        "repeat": "120",
        "crontab": "",
        "once": false,
        "onceDelay": "",
        "x": 160,
        "y": 400,
        "wires": [
            [
                "70a2249f.495bec"
            ]
        ]
    },
    {
        "id": "e31ca9c9.2a72d8",
        "type": "function",
        "z": "50466fda.5d00f",
        "name": "Get ecobeePin Token",
        "func": "// Ecobee API Key stored in variable:\n// context.global.Ecobee.ClientID=msg.payload;\n\nvar newMsg ={\n//    \"url\":\"https://api.ecobee.com/authorize?response_type=ecobeePin&client_id=\"+context.global.Ecobee.ClientID+\"&scope=smartWrite\",\n    \"url\":\"https://api.ecobee.com/authorize?response_type=ecobeePin&client_id=\"+global.get(\"Ecobee.ClientID\")+\"&scope=smartWrite\",\n    \"method\": \"GET\",\n    headers: {\n    }\n};\nreturn newMsg;",
        "outputs": 1,
        "noerr": 0,
        "x": 420,
        "y": 100,
        "wires": [
            [
                "bc583db0.45f21"
            ]
        ]
    },
    {
        "id": "7215d04f.35c9b",
        "type": "debug",
        "z": "50466fda.5d00f",
        "name": "",
        "active": true,
        "console": "false",
        "complete": "payload",
        "x": 960,
        "y": 100,
        "wires": []
    },
    {
        "id": "bc583db0.45f21",
        "type": "http request",
        "z": "50466fda.5d00f",
        "name": "",
        "method": "use",
        "ret": "obj",
        "url": "",
        "tls": "",
        "x": 610,
        "y": 100,
        "wires": [
            [
                "babf59ff.4ca048"
            ]
        ]
    },
    {
        "id": "7d405852.04f168",
        "type": "function",
        "z": "50466fda.5d00f",
        "name": "Get Thermostats",
        "func": "//    curl -H \"Content-Type: text/json\" -H \"Authorization: Bearer ACCESS_TOKEN\" 'https://api.ecobee.com/1/thermostat?format=json&body=\\{\"selection\":\\{\"selectionType\":\"registered\",\"selectionMatch\":\"\",\"includeRuntime\":true\\}\\}'             \n\n//if ((context.global.Ecobee !== null) && (context.global.Ecobee !== undefined)) {\n//    if ((context.global.Ecobee.refresh_token !== null) && (context.global.Ecobee.refresh_token !== undefined)) {\n    if ((global.get(\"Ecobee.refresh_token\") !== null) && (global.get(\"Ecobee.refresh_token\") !== undefined)) {\n    // if (typeof context.global.Ecobee.refresh_token !== 'undefined') {\n    //if (context.global.Ecobee.refresh_token!==\"\") {\n        var newMsg={\n    //        \"url\":\"https://api.ecobee.com/1/thermostat?format=json&body=%7B%22selection%22%3A%7B%22includeAlerts%22%3A%22true%22%2C%22selectionType%22%3A%22registered%22%2C%22selectionMatch%22%3A%22%22%2C%22includeEvents%22%3A%22false%22%2C%22includeEquipmentStatus%22%3A%22true%22%2C%22includeSettings%22%3A%22true%22%2C%22includeRuntime%22%3A%22true%22%2C%22includeSensors%22%3A%22true%22%2C%22includeWeather%22%3A%22true%22%2C%22includeSettings%22%3A%22true%22%7D%7D\",\n    //        \"url\":\"https://api.ecobee.com/1/thermostat?format=json&body=%7B%22selection%22%3A%7B%22includeAlerts%22%3A%22true%22%2C%22selectionType%22%3A%22registered%22%2C%22selectionMatch%22%3A%22%22%2C%22includeEvents%22%3A%22false%22%2C%22includeEquipmentStatus%22%3A%22true%22%2C%22includeSettings%22%3A%22true%22%2C%22includeRuntime%22%3A%22true%22%2C%22includeSensors%22%3A%22true%22%2C%22includeWeather%22%3A%22true%22%2C%22includeSettings%22%3A%22true%22%7D%7D\",\n    //        \"url\":\"https://api.ecobee.com/1/thermostat?format=json&body=%7B%22selection%22%3A%7B%22selectionType%22%3A%22registered%22%2C%22selectionMatch%22%3A%22%22%2C%22includeEvents%22%3A%22false%22%2C%22includeEquipmentStatus%22%3A%22true%22%7D%7D\",\n            \"url\":\"https://api.ecobee.com/1/thermostat?format=json&body=%7B%22selection%22%3A%7B%22selectionType%22%3A%22registered%22%2C%22selectionMatch%22%3A%22%22%2C%22includeEvents%22%3A%22false%22%2C%22includeEquipmentStatus%22%3A%22true%22%2C%22includeRuntime%22%3A%22true%22%2C%22includeSensors%22%3A%22true%22%2C%22includeWeather%22%3A%22true%22%7D%7D\",\n            \"method\": \"GET\",\n            headers: {\n                \"Content-Type\":\"application/json;charset=UTF-8\",\n                \"Authorization\":\"Bearer \"+global.get(\"Ecobee.access_token\"),\n            }\n           }\n    } else {\n        var newMsg=null; // don't do anything if authorization is not done\n    //    var newMsg={\n    //        \"url\":\"127.0.0.1\",\n    //        \"method\":\"GET\"\n    //    }\n//    }\n//} else {\n//    var newMsg=null; // don't do anything if authorization is not done\n//    var newMsg={\n//        \"url\":\"127.0.0.1\",\n//        \"method\":\"GET\"\n//    }\n}\nreturn newMsg;",
        "outputs": 1,
        "noerr": 0,
        "x": 502.25,
        "y": 399.5,
        "wires": [
            [
                "10830111.cc29df"
            ]
        ]
    },
    {
        "id": "10830111.cc29df",
        "type": "http request",
        "z": "50466fda.5d00f",
        "name": "Get Thermostat Request",
        "method": "use",
        "ret": "obj",
        "url": "",
        "tls": "",
        "x": 712.5,
        "y": 399.5,
        "wires": [
            [
                "b543311d.f82ef"
            ]
        ]
    },
    {
        "id": "1c63e8e6.23b8c7",
        "type": "inject",
        "z": "50466fda.5d00f",
        "name": "Refresh token every 30 minutes",
        "topic": "",
        "payload": "",
        "payloadType": "str",
        "repeat": "1200",
        "crontab": "",
        "once": false,
        "x": 180,
        "y": 300,
        "wires": [
            [
                "222cc17.3f3123e"
            ]
        ]
    },
    {
        "id": "222cc17.3f3123e",
        "type": "function",
        "z": "50466fda.5d00f",
        "name": "Refresh Token",
        "func": "//if ((global.get(\"Ecobee\") !== null) && (global.Ecobee !== undefined)) {\n    if ((global.get(\"Ecobee.refresh_token\") !== null) && (global.get(\"Ecobee.refresh_token\") !== undefined)) {\n        var newMsg ={\n            \"url\":\"https://api.ecobee.com/token?grant_type=refresh_token&code=\"+global.get(\"Ecobee.refresh_token\")+\"&client_id=\"+global.get(\"Ecobee.ClientID\")+\"\",\n            \"method\": \"POST\",\n            headers: { }\n            }\n        } else {\n            var newMsg=null; // don't do anything if authorization is not done\n        }\n//} else {\n//    var newMsg=null; // don't do anything if authorization is not done\n//}\nreturn newMsg;",
        "outputs": 1,
        "noerr": 0,
        "x": 400,
        "y": 300,
        "wires": [
            [
                "8f53ba9e.62ee08"
            ]
        ]
    },
    {
        "id": "8f53ba9e.62ee08",
        "type": "http request",
        "z": "50466fda.5d00f",
        "name": "",
        "method": "use",
        "ret": "obj",
        "url": "",
        "x": 570,
        "y": 300,
        "wires": [
            [
                "89c2c2df.d2e5"
            ]
        ]
    },
    {
        "id": "9dc9e01e.3f92c",
        "type": "function",
        "z": "50466fda.5d00f",
        "name": "Define Access and Refresh Token vars",
        "func": "global.set(\"Ecobee.access_token\",msg.payload.access_token);\nglobal.set(\"Ecobee.refresh_token\",msg.payload.refresh_token);\n// node.warn(\"Tokens refreshed successfully.\");\nmsg.payload={\n    \"_id\":\"tokens\",\n    \"_rev\":global.get(\"Ecobee._rev\"),\n    \"access_token\":global.get(\"Ecobee.access_token\"),\n    \"refresh_token\":global.get(\"Ecobee.refresh_token\")\n};\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 880,
        "y": 260,
        "wires": [
            []
        ]
    },
    {
        "id": "c0a8cda1.94c0b",
        "type": "debug",
        "z": "50466fda.5d00f",
        "name": "",
        "active": false,
        "console": "false",
        "complete": "payload",
        "x": 970,
        "y": 300,
        "wires": []
    },
    {
        "id": "dc855d88.96a13",
        "type": "comment",
        "z": "50466fda.5d00f",
        "name": "Step #3 - Refresh Token Flow a few times for good measure.",
        "info": "This flow will refresh your token every time the input button is pressed.\n\nGlobal variables set -- EcobeeAccessToken and EcobeeRefreshToken",
        "x": 240,
        "y": 260,
        "wires": []
    },
    {
        "id": "cefa9323.f506",
        "type": "comment",
        "z": "50466fda.5d00f",
        "name": "Step #4 - Get Thermostat Data - 1 minute polling works but Ecobee says only poll every 3 minutes or more",
        "info": "Get thermostat data\nEcobee reference to 3 minute interval:\nhttps://www.ecobee.com/home/developer/api/documentation/v1/operations/get-thermostat-summary.shtml\n",
        "x": 380,
        "y": 360,
        "wires": []
    },
    {
        "id": "2aa0e254.0421ee",
        "type": "inject",
        "z": "50466fda.5d00f",
        "name": "Step 1",
        "topic": "",
        "payload": "",
        "payloadType": "none",
        "repeat": "",
        "crontab": "",
        "once": false,
        "x": 90,
        "y": 100,
        "wires": [
            [
                "2e8762d3.16a4de"
            ]
        ]
    },
    {
        "id": "2a204d64.b90b32",
        "type": "comment",
        "z": "50466fda.5d00f",
        "name": "Step #1 - Requesting the 4-digit ecobeePin - Log in to Ecobee.com and go to your \"My Apps\" before clicking the Inject node.",
        "info": "The ecobeePin must be entered into your \"My Apps\" in Ecobee.com within 10 minutes.",
        "x": 440,
        "y": 20,
        "wires": []
    },
    {
        "id": "5251da69.a11c34",
        "type": "function",
        "z": "50466fda.5d00f",
        "name": "Get Authorization Token",
        "func": "var newMsg ={\n    \"url\":\"https://api.ecobee.com/token?grant_type=ecobeePin&code=\"+global.get(\"Ecobee.access_token\")+\"&client_id=\"+global.get(\"Ecobee.ClientID\"),\n    \"method\": \"POST\",\n    headers: {\n    }\n}\nreturn newMsg;",
        "outputs": 1,
        "noerr": 0,
        "x": 270,
        "y": 200,
        "wires": [
            [
                "2ffd018.f9c37fe"
            ]
        ]
    },
    {
        "id": "2ffd018.f9c37fe",
        "type": "http request",
        "z": "50466fda.5d00f",
        "name": "",
        "method": "use",
        "ret": "obj",
        "url": "",
        "x": 490,
        "y": 200,
        "wires": [
            [
                "4f85e128.2eaf3"
            ]
        ]
    },
    {
        "id": "bc26abf2.7b2948",
        "type": "comment",
        "z": "50466fda.5d00f",
        "name": "Step #2 - Requesting the first access token - you must run Step 2 within 10 minutes of running Step 1.",
        "info": "Now that the app has been added to your \"My Apps\" - we need to request our first access token.",
        "x": 370,
        "y": 160,
        "wires": []
    },
    {
        "id": "babf59ff.4ca048",
        "type": "function",
        "z": "50466fda.5d00f",
        "name": "Format Ecobee Pin",
        "func": "global.set(\"Ecobee.access_token\", msg.payload.code);\nvar msg = {\"payload\":\"Ecobee Pin: \"+msg.payload.ecobeePin};\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 790,
        "y": 100,
        "wires": [
            [
                "7215d04f.35c9b"
            ]
        ]
    },
    {
        "id": "4f85e128.2eaf3",
        "type": "function",
        "z": "50466fda.5d00f",
        "name": "Define Access and Refresh Tokens",
        "func": "global.set(\"Ecobee.refresh_token\", msg.payload.refresh_token);\nglobal.set(\"Ecobee.access_token\", msg.payload.access_token);\nmsg.payload=global.get(\"Ecobee.refresh_token\");\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 720,
        "y": 200,
        "wires": [
            [
                "67d81ca8.768654"
            ]
        ]
    },
    {
        "id": "67d81ca8.768654",
        "type": "debug",
        "z": "50466fda.5d00f",
        "name": "",
        "active": true,
        "console": "false",
        "complete": "false",
        "x": 970,
        "y": 200,
        "wires": []
    },
    {
        "id": "89c2c2df.d2e5",
        "type": "switch",
        "z": "50466fda.5d00f",
        "name": "Refresh Token",
        "property": "payload.refresh_token",
        "propertyType": "msg",
        "rules": [
            {
                "t": "null"
            },
            {
                "t": "nnull"
            }
        ],
        "checkall": "true",
        "outputs": 2,
        "x": 740,
        "y": 300,
        "wires": [
            [
                "c0a8cda1.94c0b"
            ],
            [
                "9dc9e01e.3f92c",
                "c0a8cda1.94c0b"
            ]
        ]
    },
    {
        "id": "70a2249f.495bec",
        "type": "delay",
        "z": "50466fda.5d00f",
        "name": "",
        "pauseType": "rate",
        "timeout": "5",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "10",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": true,
        "x": 357.4166564941406,
        "y": 399.91668701171875,
        "wires": [
            [
                "7d405852.04f168"
            ]
        ]
    },
    {
        "id": "8d207c6b.d448b",
        "type": "comment",
        "z": "50466fda.5d00f",
        "name": "You will have 2 minutes to enter the 4-digit pin into Ecobee.com and authorize the application. (Ecobee disgards the 4-pin code after 10 minutes!)",
        "info": "",
        "x": 510,
        "y": 60,
        "wires": []
    },
    {
        "id": "897bdcda.4ecd5",
        "type": "inject",
        "z": "50466fda.5d00f",
        "name": "Step 2",
        "topic": "",
        "payload": "",
        "payloadType": "str",
        "repeat": "",
        "crontab": "",
        "once": false,
        "x": 90,
        "y": 200,
        "wires": [
            [
                "5251da69.a11c34"
            ]
        ]
    },
    {
        "id": "1db1d842.642b08",
        "type": "debug",
        "z": "88396424.c54498",
        "name": "",
        "active": false,
        "console": "false",
        "complete": "true",
        "x": 890,
        "y": 80,
        "wires": []
    },
    {
        "id": "b6f4dcb9.3d634",
        "type": "comment",
        "z": "5c25c3f4.74d4ac",
        "name": "notes",
        "info": "http://www.smarthome.com.au/smarthome-blog/cat/insteon/post/insteon-hub-http-commands/\nhttp://docs.insteon.apiary.io/#reference/houses/house-device-activation-stream\nhttps://insteon.atlassian.net/wiki/pages/viewpage.action?pageId=16973881\nhttp://cache.insteon.com/developer/developer-product-list-012014.pdf\nhttp://cache.insteon.com/developer/2242-222dev-062013-en.pdf\nhttp://cache.insteon.com/pdf/INSTEON_Developers_Guide_20070816a.pdf\nhttp://cache.insteon.com/developer/developer-guide-022009-en.pdf\nhttp://cache.insteon.com/developer/i2CSdev-022012-en.pdf\nhttp://www.madreporite.com/insteon/i2cs.html\n\nMirabell BAxfhx6l\n32.2A.0F 322A0F\n\nhttp://Mirabell:BAxfhx6l@192.168.1.231:25105/3?0262322A0F0F12FF=I=350\nhttp://Mirabell:BAxfhx6l@192.168.1.231:25105/3?0262322A0F0F1400=I=354\nhttp://Mirabell:BAxfhx6l@192.168.1.231:25105/b.xml?01=0=F\nhttp://Mirabell:BAxfhx6l@192.168.1.231:25105/buffstatus.xml\n\nRequest Example:\nhttp://Mirabell:BAxfhx6l@192.168.1.231:25105/3?0262322A0F0F1900=I=3\nhttp://Mirabell:BAxfhx6l@192.168.1.231:25105/buffstatus.xml\n\nhttp://192.168.1.231:25105/sx.xml?32.2A.0F=1900\n\nTurn ON 322A0F:\nhttp://192.168.1.231:25105/3?0262322A0F0F12FF=I=350\n\nTurn OFF 322A0F:\nhttp://192.168.1.231:25105/3?0262322A0F0F1400=I=354\n\nGet buffer:\nhttp://192.168.1.231:25105/buffstatus.xml\n\nClear buffer\nhttp://192.168.1.231:25105/1?XB=M=1\n\nRequest status of 322A0F and then get buffer:\nhttp://192.168.1.231:25105/3?0262322A0F0F1900=I=3\nhttp://192.168.1.231:25105/buffstatus.xml\n\nHere is a big buffer request response from:\nhttp://192.168.1.231:25105/buffstatus.xml\n\nStays until cleared.\n\nhttp://192.168.1.231:25105/1?XB=M=1\n\nAnoterh after turning off:322A0F\n<response>\n<BS>\n0250322A0F000001C313000250322A0F3129FE4513010250322A0F130101CF06000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000042\n</BS>\n</response>\n\nafter clearing then using the miniremote:\n<response>\n<BS>\n02501C336F000001CB130002501C336F000001CB13000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000002C\n</BS>\n</response>\n\nanother payload example\n1F6AE0000001CF1100\n0250\n1F6AE03129FE451101\n0250\n1F6AE0110301CF0601\n0262\n1F6AE005190206\n0250\n1F6AE03129FE251999\n0262\n1F6AE005190206\n0250\n1F6AE03129FE251999\n00000000000000000000000000000000000000000000000000000092\n\n\n",
        "x": 66,
        "y": 26,
        "wires": []
    },
    {
        "id": "8668c6d2.d2b728",
        "type": "function",
        "z": "5c25c3f4.74d4ac",
        "name": "set flow context variables",
        "func": "flow.set(\"username\",msg.username)\nflow.set(\"password\",msg.password)\n\nvar urlprefix = \"http://192.168.1.231:25105/\"; //example \"http://192.168.1.231:25105/\"\n\nvar auth = 'Basic ' + new Buffer(username + ':' + password).toString('base64');\nvar newMsg ={\n    \"url\":urlprefix + \"buffstatus.xml\",\n    \"method\": \"GET\",\n    headers: {\n        'Authorization': auth\n    }\n};\nflow.set('buffurlwithauth',newMsg);\nflow.set('urlbase',\"http://192.168.1.231:25105/\");\nflow.set('urlsuffixforbuffstatus',\"buffstatus.xml\");\nflow.set('urlsuffixforbuffclear',\"1?XB=M=1\");\n\n// new way for context\n//var newMsg = Object.create(flow.get('buffurlwithauth'));\n\n/*\njt notes about context:\nnode level context (just) within a function block or node):\n    context.set(''); context.get('');\nflow level:\n    flow.set(''); flow.get('');\nglobal\n    global.set(''); global.get('');\n*/\n\nvar devices = {\n    \"3129FE\":\"hub1\",\n    \"3B562B\":\"hub2\",\n    \"14841C\":\"plm             \",\n    \"062197\":\"holwhtapp062197\",\n    \"07904A\":\"applinc07904A\",\n    \"0621C1\":\"#deadoldaquarium\",\n    \"09557A\":\"guestbdrm\",\n    \"13FD44\":\"holoutapp13fd44\",\n    \"13FE5A\":\"holoutapp13fe5a\",\n    \"14022E\":\"outmalibu\",\n    \"14416B\":\"livingcurio\",\n    \"144184\":\"livingtable\",\n    \"1443CC\":\"livingpic\",\n    \"1561AC\":\"bmtoffbig\",\n    \"156497\":\"bmtstairs\",\n    \"1564D3\":\"bmtoffsml\",\n    \"15C7C0\":\"mstrportkpd\",\n    \"1649CF\":\"spare1\",\n    \"1649F8\":\"outfront\",\n    \"164B6E\":\"upstairshalldummy1\",\n    \"164B8D\":\"upstairshall\",\n    \"164BE2\":\"famfireplace\",\n    \"167203\":\"mstrmain\",\n    \"169295\":\"famfloorlamp\",\n    \"1692D1\":\"spare2\",\n    \"1692F8\":\"mstrbathvan\",\n    \"169350\":\"spare3\",\n    \"169371\":\"spare4\",\n    \"16D788\":\"holwhtapp16d788\",\n    \"16D7F1\":\"bobscncapp16d7f1\",\n    \"16DAC3\":\"aquarium\",\n    \"18933C\":\"lamplinc18933c\",\n    \"192260\":\"outbacklaundry\",\n    \"1AF6AF\":\"bmtwshpmain\",\n    \"1B8C3B\":\"garage\",\n    \"1B97B8\":\"mstrbathfan\",\n    \"1F03E0\":\"kitisland\",\n    \"1F04EC\":\"kitclg\",\n    \"1F05AB\":\"kitclgdummy\",\n    \"1F6AE0\":\"kitundercab\",\n    \"1F6B12\":\"laundrydummy\",\n    \"1F6C54\":\"laundry\",\n    \"1F6D12\":\"kitdinette\",\n    \"1F6DC1\":\"bmtrecwest\",\n    \"1F707C\":\"vestible\",\n    \"1F70EE\":\"livingmain\",\n    \"1F733E\":\"bmtreceast\",\n    \"1F7974\":\"foyerchanddummy\",\n    \"1F7C43\":\"mstrbathdome\",\n    \"1F7F02\":\"foyerchand\",\n    \"1F7F83\":\"upstairshalldummy1\",\n    \"1F8029\":\"powderlight\",\n    \"1F80D2\":\"diningroom\",\n    \"1F816B\":\"kitsinkbay\",\n    \"201FC1\":\"#mstrclosjeff\",\n    \"203390\":\"mstrclosjeff\",\n    \"20341F\":\"mstrcloskathy\",\n    \"208E27\":\"kitdisposal\",\n    \"209011\":\"powderfan\",\n    \"221474\":\"kitkeypad\",\n    \"221547\":\"bmthall\",\n    \"2215E5\":\"guestbath\",\n    \"3F4A5A\":\"kyleclgfan\",\n    \"3999C8\":\"kylekeypad\",\n    \"3A874C\":\"lamplinc3A874C\",\n    \"3A8A4F\":\"lamplinc3A8A4F\",\n    \"322A0F\":\"holoutapp322A0F\",\n    \"322DFD\":\"holout322DFD\",\n    \"1F023C\":\"unknown2\",\n    \"01DDB3\":\"unknown4\",\n    \"141184\":\"bmtwshpmotion\",\n    \"1C336F\":\"miniremote\",\n    \"01DD83\":\"ezio6i01DD83\"\n};\n//newMsg.url = \"http://192.168.1.231:25105/mywebpage.xml\";\nreturn newMsg;",
        "outputs": 1,
        "noerr": 0,
        "x": 270,
        "y": 100,
        "wires": [
            [
                "bceb7c7a.2e4b2"
            ]
        ]
    },
    {
        "id": "bceb7c7a.2e4b2",
        "type": "debug",
        "z": "5c25c3f4.74d4ac",
        "name": "",
        "active": true,
        "console": "false",
        "complete": "true",
        "x": 930,
        "y": 100,
        "wires": []
    },
    {
        "id": "685b0ea9.f4dec",
        "type": "comment",
        "z": "5c25c3f4.74d4ac",
        "name": "set global variables",
        "info": "",
        "x": 110,
        "y": 60,
        "wires": []
    },
    {
        "id": "d7488de5.d88a",
        "type": "function",
        "z": "5c25c3f4.74d4ac",
        "name": "form http request",
        "func": "// http://Mirabell:BAxfhx6i@192.168.1.231:25105/3?0262322A0F0F12FF=I=3\nvar insteondeviceid = \"322A0F\"; //insteon device id\nvar insteonsdflag = \"0F\"; //0F indicates we are sending a standard command, not an extended command\nvar insteoncommand = \"12\";//11=on, 12=fast on, 13=off, 14=fast off, 19 = get status\nvar insteonlevel = \"FF\"; //\nvar newMsg ={\n    \"url\":\"http://192.168.1.231:25105/3?0262\"+\n        insteonsdflag +\n        insteoncommand +\n        insteonlevel +\n        \"0F12FF=I=3\",\n    \"method\": \"POST\",\n    headers: {\n    \"User\" : \"Mirabell\",\n    \"Password\" : \"BAxfhx6i\"\n\n    }\n\n//    \"url\":\"http://Mirabell:BAxfhx6i@192.168.1.231:25105/3?026222A0F0F12FF=I=3\" //,\n//    \"method\": \"GET\",\n//    headers: {\n//    }\n};\nreturn newMsg;\n",
        "outputs": 1,
        "noerr": 0,
        "x": 312,
        "y": 739,
        "wires": [
            [
                "266b7339.82a40c",
                "d0a26bc4.43bc88"
            ]
        ]
    },
    {
        "id": "b0f29988.fc93b8",
        "type": "inject",
        "z": "5c25c3f4.74d4ac",
        "name": "Test On",
        "topic": "",
        "payload": "",
        "payloadType": "str",
        "repeat": "",
        "crontab": "",
        "once": false,
        "x": 152,
        "y": 739,
        "wires": [
            [
                "d7488de5.d88a"
            ]
        ]
    },
    {
        "id": "375384be.ef608c",
        "type": "debug",
        "z": "5c25c3f4.74d4ac",
        "name": "",
        "active": true,
        "console": "false",
        "complete": "true",
        "x": 930,
        "y": 720,
        "wires": []
    },
    {
        "id": "266b7339.82a40c",
        "type": "http request",
        "z": "5c25c3f4.74d4ac",
        "name": "",
        "method": "use",
        "ret": "obj",
        "url": "",
        "tls": "",
        "x": 626,
        "y": 740,
        "wires": [
            [
                "375384be.ef608c"
            ]
        ]
    },
    {
        "id": "d0a26bc4.43bc88",
        "type": "debug",
        "z": "5c25c3f4.74d4ac",
        "name": "",
        "active": true,
        "console": "false",
        "complete": "false",
        "x": 910,
        "y": 680,
        "wires": []
    },
    {
        "id": "143da4df.cb2e2b",
        "type": "function",
        "z": "5c25c3f4.74d4ac",
        "name": "form http request",
        "func": "var insteondeviceid = \"322A0F\"; //insteon device id\nvar insteonsdflag = \"0F\"; //0F indicates we are sending a standard command, not an extended command\nvar insteoncommand = \"12\";//11=on, 12=fast on, 13=off, 14=fast off, 19 = get status\nvar insteonlevel = \"FF\"; //\nvar username = flow.get(\"username\");\nvar password = flow.get(\"password\");\nvar auth = 'Basic ' + new Buffer(username + ':' + password).toString('base64');\n\nvar newMsg ={\n    \"url\":\"http://192.168.1.231:25105/buffstatus.xml\",\n    \"method\": \"GET\",\n    headers: {\n        'Authorization': auth\n    }\n};\n\n\nreturn newMsg;\n",
        "outputs": 1,
        "noerr": 0,
        "x": 360,
        "y": 621,
        "wires": [
            [
                "eb450847.70b608",
                "5a6bb7f7.461628"
            ]
        ]
    },
    {
        "id": "3fe1ae2e.464bc2",
        "type": "inject",
        "z": "5c25c3f4.74d4ac",
        "name": "OLD Test GetBuffer",
        "topic": "",
        "payload": "",
        "payloadType": "str",
        "repeat": "",
        "crontab": "",
        "once": false,
        "x": 169,
        "y": 618,
        "wires": [
            [
                "143da4df.cb2e2b"
            ]
        ]
    },
    {
        "id": "9344952c.526978",
        "type": "debug",
        "z": "5c25c3f4.74d4ac",
        "name": "",
        "active": true,
        "console": "false",
        "complete": "true",
        "x": 930,
        "y": 620,
        "wires": []
    },
    {
        "id": "eb450847.70b608",
        "type": "http request",
        "z": "5c25c3f4.74d4ac",
        "name": "",
        "method": "use",
        "ret": "obj",
        "url": "",
        "tls": "",
        "x": 603,
        "y": 619,
        "wires": [
            [
                "9344952c.526978"
            ]
        ]
    },
    {
        "id": "5a6bb7f7.461628",
        "type": "debug",
        "z": "5c25c3f4.74d4ac",
        "name": "",
        "active": true,
        "console": "false",
        "complete": "false",
        "x": 910,
        "y": 580,
        "wires": []
    },
    {
        "id": "ec8c28f2.7dd198",
        "type": "function",
        "z": "5c25c3f4.74d4ac",
        "name": "form http request",
        "func": "//var newMsg = Object.create(new flow.get('buffurlwithauth'));\nvar newMsg = Object.create( flow.get('buffurlwithauth') );\n//node.log(newMsg);\n//newMsg.URL = flow.get('urlbase') + flow.get('urlsuffixforbuffstatus');\n//node.log(newMsg);\nreturn newMsg;\n",
        "outputs": 1,
        "noerr": 0,
        "x": 310,
        "y": 140,
        "wires": [
            [
                "9509b2a6.ec9d2",
                "7f592237.ddc6dc"
            ]
        ]
    },
    {
        "id": "35670033.854a4",
        "type": "inject",
        "z": "5c25c3f4.74d4ac",
        "name": "Test GetBuffer",
        "topic": "",
        "payload": "",
        "payloadType": "str",
        "repeat": "",
        "crontab": "",
        "once": false,
        "x": 120,
        "y": 140,
        "wires": [
            [
                "ec8c28f2.7dd198"
            ]
        ]
    },
    {
        "id": "f4f5a155.69efc",
        "type": "debug",
        "z": "5c25c3f4.74d4ac",
        "name": "",
        "active": false,
        "console": "false",
        "complete": "payload",
        "x": 930,
        "y": 180,
        "wires": []
    },
    {
        "id": "9509b2a6.ec9d2",
        "type": "http request",
        "z": "5c25c3f4.74d4ac",
        "name": "",
        "method": "use",
        "ret": "txt",
        "url": "",
        "tls": "",
        "x": 492,
        "y": 162,
        "wires": [
            [
                "f4f5a155.69efc",
                "3c7011ae.558b7e"
            ]
        ]
    },
    {
        "id": "7f592237.ddc6dc",
        "type": "debug",
        "z": "5c25c3f4.74d4ac",
        "name": "",
        "active": false,
        "console": "false",
        "complete": "true",
        "x": 950,
        "y": 140,
        "wires": []
    },
    {
        "id": "871694be.1c8dd8",
        "type": "function",
        "z": "5c25c3f4.74d4ac",
        "name": "strip payload to data",
        "func": "var newmsg = {\n    payload: msg.payload.response.BS[0]\n}\nreturn newmsg;",
        "outputs": "1",
        "noerr": 0,
        "x": 320,
        "y": 200,
        "wires": [
            [
                "ddb22050.f994d",
                "2e9d6970.1cd016"
            ]
        ]
    },
    {
        "id": "2c18e445.94cc1c",
        "type": "debug",
        "z": "5c25c3f4.74d4ac",
        "name": "",
        "active": false,
        "console": "false",
        "complete": "false",
        "x": 930,
        "y": 220,
        "wires": []
    },
    {
        "id": "3c7011ae.558b7e",
        "type": "xml",
        "z": "5c25c3f4.74d4ac",
        "name": "",
        "attr": "",
        "chr": "",
        "x": 630,
        "y": 180,
        "wires": [
            [
                "2c18e445.94cc1c",
                "871694be.1c8dd8"
            ]
        ]
    },
    {
        "id": "ddb22050.f994d",
        "type": "debug",
        "z": "5c25c3f4.74d4ac",
        "name": "",
        "active": true,
        "console": "false",
        "complete": "false",
        "x": 930,
        "y": 260,
        "wires": []
    },
    {
        "id": "e40ab172.210d4",
        "type": "function",
        "z": "5c25c3f4.74d4ac",
        "name": "form http request",
        "func": "var newMsg = Object.create( flow.get('buffurlwithauth') );\n// not\n// var newMsg = flow.get('buffurlwithauth');\nnewMsg.url = flow.get('urlbase') + flow.get('urlsuffixforbuffclear');\n\nreturn newMsg;\n",
        "outputs": 1,
        "noerr": 0,
        "x": 330,
        "y": 500,
        "wires": [
            [
                "bd58eab9.0e17d8",
                "1887233a.fbd06d"
            ]
        ]
    },
    {
        "id": "e62803b5.cdbe6",
        "type": "inject",
        "z": "5c25c3f4.74d4ac",
        "name": "Clear buffer",
        "topic": "",
        "payload": "1?XB=M=1",
        "payloadType": "str",
        "repeat": "",
        "crontab": "",
        "once": false,
        "x": 130,
        "y": 500,
        "wires": [
            [
                "e40ab172.210d4"
            ]
        ]
    },
    {
        "id": "3841e0b.2e1c82",
        "type": "debug",
        "z": "5c25c3f4.74d4ac",
        "name": "",
        "active": true,
        "console": "false",
        "complete": "payload",
        "x": 910,
        "y": 540,
        "wires": []
    },
    {
        "id": "bd58eab9.0e17d8",
        "type": "http request",
        "z": "5c25c3f4.74d4ac",
        "name": "",
        "method": "use",
        "ret": "txt",
        "url": "",
        "tls": "",
        "x": 552.9999923706055,
        "y": 528.0000057220459,
        "wires": [
            [
                "3841e0b.2e1c82"
            ]
        ]
    },
    {
        "id": "1887233a.fbd06d",
        "type": "debug",
        "z": "5c25c3f4.74d4ac",
        "name": "",
        "active": true,
        "console": "false",
        "complete": "true",
        "x": 930,
        "y": 500,
        "wires": []
    },
    {
        "id": "2e9d6970.1cd016",
        "type": "function",
        "z": "5c25c3f4.74d4ac",
        "name": "check first byte for 0x02",
        "func": "var newMsg = msg ;//0x02 is normal command start\nif (newMsg.payload.length >= 2){\n    node.log(\"newMsg.payload.length=\" + newMsg.payload.length);\n    node.log(\"newMsg.payload.substring(0,2)=\" + newMsg.payload.substring(0,2) + \"   parseInt(newMsg.payload.substring(0,1),16)=\" + parseInt(newMsg.payload.substring(0,2),16));\n    if (parseInt(newMsg.payload.substring(0,2),16) == 0x02){\n        newMsg.payload = newMsg.payload.substring(2);\n        var i = parseInt(newMsg.payload.substring(0,2),16);\n//        if ((i==0x50) | (i==0x51)){\n//            newMsg.payload.deviceSrc = newMsg.payload.substring(2,6);\n//            newMsg.payload.deviceDst = newMsg.payload.substring(8,6);\n//        }\n    } else {\n        newMsg = null;\n    }\n} else {\n    newMsg = null;\n}\nreturn newMsg;",
        "outputs": "1",
        "noerr": 0,
        "x": 230,
        "y": 280,
        "wires": [
            [
                "f9e484f3.efd178",
                "1200aa65.90ad26"
            ]
        ]
    },
    {
        "id": "b3dbb940.b507e8",
        "type": "function",
        "z": "5c25c3f4.74d4ac",
        "name": "check byte 1 for 0x02",
        "func": "var newMsg = msg ;//0x02 is normal command start\nif (newMsg.payload.length > 2){\n    if (newMsg.substring(0,1) == 0x02){\n        newMsg.payload = newMsg.payload.substring(2);\n    }else{\n        newMsg = null;\n    }\n}else{\n    newMsg = null;\n}\nreturn [msg1,msg2,msg3,msg4,msg5,msg6,msg7];",
        "outputs": "1",
        "noerr": 0,
        "x": 400,
        "y": 400,
        "wires": [
            []
        ]
    },
    {
        "id": "f9e484f3.efd178",
        "type": "debug",
        "z": "5c25c3f4.74d4ac",
        "name": "",
        "active": true,
        "console": "false",
        "complete": "false",
        "x": 930,
        "y": 300,
        "wires": []
    },
    {
        "id": "1200aa65.90ad26",
        "type": "function",
        "z": "5c25c3f4.74d4ac",
        "name": "check next byte for 0x50,0x51",
        "func": "var msg1 = {};\nvar msg2 = {}\nif (msg.payload.length > 0){\n    var i = parseInt(msg.payload.substring(0,2),16);\n    if (i == 0x50){ //0x50 is standard command\n        msg1.payload = msg.payload.substring(2);\n        msg2.payload = null;\n    } else if (i == 0x51){ //0x51 is extended command\n        msg1.payload = null;\n        msg2.payload = msg.payload.substring(2);\n    } else {\n        msg1 = null;\n        msg2 = null;\n    }\n} else {\n    msg1 = null;\n    msg2 = null;\n}\nreturn [msg1,msg2];\n",
        "outputs": "2",
        "noerr": 0,
        "x": 210,
        "y": 320,
        "wires": [
            [
                "17c293fe.cd6bac"
            ],
            [
                "17c293fe.cd6bac"
            ]
        ]
    },
    {
        "id": "17c293fe.cd6bac",
        "type": "debug",
        "z": "5c25c3f4.74d4ac",
        "name": "",
        "active": true,
        "console": "false",
        "complete": "false",
        "x": 929,
        "y": 340,
        "wires": []
    },
    {
        "id": "8a41434a.8e096",
        "type": "function",
        "z": "5c25c3f4.74d4ac",
        "name": "check next byte for 0x50,0x51",
        "func": "var msg1 = {};\nvar msg2 = {}\nif (msg.payload.length > 0){\n    var i = parseInt(msg.payload.substring(0,2),16);\n    if (i == 0x50){ //0x50 is standard command\n        msg1.payload = msg.payload.substring(2);\n        msg2.payload = null;\n    } else if (i == 0x51){ //0x51 is extended command\n        msg1.payload = null;\n        msg2.payload = msg.payload.substring(2);\n    } else {\n        msg1 = null;\n        msg2 = null;\n    }\n} else {\n    msg1 = null;\n    msg2 = null;\n}\nreturn [msg1,msg2];\n",
        "outputs": "2",
        "noerr": 0,
        "x": 710,
        "y": 380,
        "wires": [
            [],
            []
        ]
    },
    {
        "id": "1552af4a.38b451",
        "type": "function",
        "z": "5c25c3f4.74d4ac",
        "name": "check next byte for 0x50,0x51",
        "func": "var msg1 = {};\nvar msg2 = {}\nif (msg.payload.length > 0){\n    var i = parseInt(msg.payload.substring(0,2),16);\n    if (i == 0x50){ //0x50 is standard command\n        msg1.payload = msg.payload.substring(2);\n        msg2.payload = null;\n    } else if (i == 0x51){ //0x51 is extended command\n        msg1.payload = null;\n        msg2.payload = msg.payload.substring(2);\n    } else {\n        msg1 = null;\n        msg2 = null;\n    }\n} else {\n    msg1 = null;\n    msg2 = null;\n}\nreturn [msg1,msg2];\n",
        "outputs": "2",
        "noerr": 0,
        "x": 710,
        "y": 420,
        "wires": [
            [],
            []
        ]
    },
    {
        "id": "5c9778e1.615958",
        "type": "function",
        "z": "426235c9.70c80c",
        "name": "Iterate",
        "func": "//Node has 2 outputs - 1 for itteration and 1 for completion\nvar nextObj, out;\nvar itt = msg.iterationInfo;\n\n\n//If the iterating has not yet begun set up the iteration metadata in the msg\nif (typeof itt === 'undefined') {\n    //Make sure payload is an array\n    if( Object.prototype.toString.call(msg.payload) !== '[object Array]' ) {\n       msg.payload = [msg.payload];\n    }\n\n    msg.iterationInfo = itt = {};\n    itt.index = -1;\n    itt.inArray = msg.payload;\n    itt.outArray = [];\n\n//Otherwise just push the input to the output array\n} else {\n    itt.outArray.push(msg.payload)\n}\n\n//Goto next object\nitt.index ++;\n\n//If there are stil objects left to iterate goto the next one in the original array\nif (itt.index < itt.inArray.length) {\n    nextObj = msg;\n    msg.payload = itt.inArray[itt.index];\n\n//otherwise pass the out array as the payload\n} else {\n    out = msg;\n    msg.payload = itt.outArray;\n    delete msg.iterationInfo;\n}\n\nreturn [nextObj, out];",
        "outputs": "2",
        "noerr": 0,
        "x": 347,
        "y": 220,
        "wires": [
            [],
            []
        ]
    },
    {
        "id": "cad97f6.e52398",
        "type": "comment",
        "z": "e8223701.eebbe8",
        "name": "Configure YOUR Wonderware connection here -->",
        "info": "This is essentiall a data pump from MQTT to\nOnline.Wonderware.com",
        "x": 210,
        "y": 20,
        "wires": []
    },
    {
        "id": "6fa21a86.e6d6d4",
        "type": "http request",
        "z": "e8223701.eebbe8",
        "name": "",
        "method": "use",
        "ret": "txt",
        "url": "",
        "tls": "",
        "x": 950,
        "y": 120,
        "wires": [
            []
        ]
    },
    {
        "id": "cd635b32.ae5f48",
        "type": "link in",
        "z": "e8223701.eebbe8",
        "name": "tapia/home/ related topics to Wonderware",
        "links": [
            "34b2b94.276a146",
            "9cd45335.9c179",
            "e520b0c4.168a8",
            "f120ff8e.ebe99"
        ],
        "x": 195,
        "y": 320,
        "wires": [
            [
                "7de4fca4.680f64"
            ]
        ]
    },
    {
        "id": "34b2b94.276a146",
        "type": "link out",
        "z": "88396424.c54498",
        "name": "",
        "links": [
            "cd635b32.ae5f48",
            "c30c472a.3b5e98",
            "a1e76248.eab86"
        ],
        "x": 875,
        "y": 320,
        "wires": []
    },
    {
        "id": "9cd45335.9c179",
        "type": "link out",
        "z": "50466fda.5d00f",
        "name": "",
        "links": [
            "cd635b32.ae5f48",
            "c30c472a.3b5e98",
            "a1e76248.eab86"
        ],
        "x": 1175,
        "y": 400,
        "wires": []
    },
    {
        "id": "e1582874.335878",
        "type": "rbe",
        "z": "88396424.c54498",
        "name": "",
        "func": "rbe",
        "gap": "",
        "start": "",
        "inout": "out",
        "x": 730,
        "y": 320,
        "wires": [
            [
                "34b2b94.276a146",
                "d07c6ad.e3c7298"
            ]
        ]
    },
    {
        "id": "6575f545.23b7fc",
        "type": "rbe",
        "z": "88396424.c54498",
        "name": "",
        "func": "rbe",
        "gap": "",
        "start": "",
        "inout": "out",
        "x": 630,
        "y": 220,
        "wires": [
            [
                "34b2b94.276a146",
                "1db1d842.642b08",
                "f48ad297.a8132"
            ]
        ]
    },
    {
        "id": "b543311d.f82ef",
        "type": "function",
        "z": "50466fda.5d00f",
        "name": "parse to [msg] array",
        "func": "i=0;\nvar ts = new Date(msg.payload.thermostatList[i].utcTime+\" UTC\").getTime();\n\nvar msgarr = [];\nmsgarr.push({\n    payload:(msg.payload.thermostatList[i].runtime.actualTemperature/10),\n    topic: \"average/temperature\",\n    timestamp : ts\n});\n\nmsgarr.push({\n    payload:(msg.payload.thermostatList[i].runtime.desiredCool/10),\n    topic: \"average/temperature/setpoint/cool\",\n    timestamp : ts\n});\nmsgarr.push({\n    payload:(msg.payload.thermostatList[i].runtime.desiredHeat/10),\n    topic: \"average/temperature/setpoint/heat\",\n    timestamp : ts\n});\nmsgarr.push({\n    payload:(msg.payload.thermostatList[i].runtime.actualHumidity),\n    topic: \"average/humidity\",\n    timestamp : ts\n});\nmsgarr.push({\n    payload:(msg.payload.thermostatList[i].weather.forecasts[i].temperature/10),\n    topic: \"outside/temperature\",\n    timestamp : ts\n});\nmsgarr.push({\n    payload:(msg.payload.thermostatList[i].weather.forecasts[i].pressure/10),\n    topic: \"outside/pressure\",\n    timestamp : ts\n});\nmsgarr.push({\n    payload:(msg.payload.thermostatList[i].weather.forecasts[i].relativeHumidity),\n    topic: \"outside/humidity\",\n    timestamp : ts\n});\nmsgarr.push({\n    payload:(msg.payload.thermostatList[i].weather.forecasts[i].windSpeed/1000),\n    topic: \"outside/wind/speed\",\n    timestamp : ts\n});\nmsgarr.push({\n    payload:(msg.payload.thermostatList[i].weather.forecasts[i].windBearing/10),\n    topic: \"outside/wind/bearing\",\n    timestamp : ts\n});\n\ni=0;\nj=0;\nk=0;\nmsgarr.push({\n    payload:(msg.payload.thermostatList[i].remoteSensors[j].capability[k].value/10),\n    topic: \"familyroom/temperature\",\n    timestamp : ts\n});\n\ni=0;\nj=1;\nk=0;\nmsgarr.push({\n    payload:(msg.payload.thermostatList[i].remoteSensors[j].capability[k].value/10),\n    topic: \"basement/temperature\",\n    timestamp : ts\n});\n\ni=0;\nj=2;\nk=0;\nmsgarr.push({\n    payload:(msg.payload.thermostatList[i].remoteSensors[j].capability[k].value/10),\n    topic: \"kyleroom/temperature\",\n    timestamp : ts\n});\ni=0;\nj=3;\nk=0;\nmsgarr.push({\n    payload:(msg.payload.thermostatList[i].remoteSensors[j].capability[k].value/10),\n    topic: \"diningroom/temperature\",\n    timestamp : ts\n});\ni=0;\nj=0;\nk=1;\nmsgarr.push({\n    payload:(msg.payload.thermostatList[i].remoteSensors[j].capability[k].value),\n    topic: \"familyroom/occupancy\",\n    timestamp : ts\n});\ni=0;\nj=1;\nk=1;\nmsgarr.push({\n    payload:(msg.payload.thermostatList[i].remoteSensors[j].capability[k].value),\n    topic: \"basement/occupancy\",\n    timestamp : ts\n});\ni=0;\nj=2;\nk=1;\nmsgarr.push({\n    payload:(msg.payload.thermostatList[i].remoteSensors[j].capability[k].value),\n    topic: \"kyleroom/occupancy\",\n    timestamp : ts\n});\ni=0;\nj=3;\nk=2;\nmsgarr.push({\n    payload:(msg.payload.thermostatList[i].remoteSensors[j].capability[k].value),\n    topic: \"diningroom/occupancy\",\n    timestamp : ts\n});\n\ni=0;\nif (msg.payload.thermostatList[i].equipmentStatus === \"\") {\n    msg.payload.thermostatList[i].equipmentStatus = \"off\";\n}\nmsgarr.push({\n    payload:(msg.payload.thermostatList[i].equipmentStatus),\n    topic: \"thermostat/status\",\n    timestamp : ts\n});\n\nreturn [msgarr];",
        "outputs": 1,
        "noerr": 0,
        "x": 940,
        "y": 400,
        "wires": [
            [
                "67b11cc1.5bfab4"
            ]
        ]
    },
    {
        "id": "cf55e901.124768",
        "type": "debug",
        "z": "50466fda.5d00f",
        "name": "",
        "active": true,
        "console": "false",
        "complete": "true",
        "x": 990,
        "y": 340,
        "wires": []
    },
    {
        "id": "5f122882.3b6d28",
        "type": "inject",
        "z": "1fec4b90.1b56f4",
        "name": "inject",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "repeat": "",
        "crontab": "",
        "once": true,
        "x": 108,
        "y": 158,
        "wires": [
            [
                "2525f2e3.ad6b6e",
                "f9ca2e1.71ee3d"
            ]
        ]
    },
    {
        "id": "2525f2e3.ad6b6e",
        "type": "function",
        "z": "1fec4b90.1b56f4",
        "name": "getJoke",
        "func": "const getJoke = function (firstname=\"Chuck\", lastname=\"Norris\") {\n    \n    let promise = new Promise((resolve, reject) => {\n        msg.resolve = resolve;\n        msg.reject = reject;\n    });\n    \n    msg.url = `http://api.icndb.com/jokes/random?firstName=${firstname}&lastName=${lastname}`;\n    msg.method = 'GET';\n    \n    node.send(Object.assign({}, msg));\n    \n    return promise;\n};\n\nglobal.set('getJoke', getJoke);",
        "outputs": 1,
        "noerr": 0,
        "x": 244,
        "y": 159,
        "wires": [
            [
                "32981db2.1ad1d2",
                "3c4ede4d.99d072"
            ]
        ]
    },
    {
        "id": "32981db2.1ad1d2",
        "type": "http request",
        "z": "1fec4b90.1b56f4",
        "name": "",
        "method": "use",
        "ret": "obj",
        "url": "",
        "tls": "",
        "x": 390,
        "y": 160,
        "wires": [
            [
                "c4d63d77.0991a",
                "c45f1ac7.617338"
            ]
        ]
    },
    {
        "id": "35bd9768.216c88",
        "type": "function",
        "z": "1fec4b90.1b56f4",
        "name": "getJoke()",
        "func": "const joke = global.get('getJoke')();\n\njoke.then(joke => {\n    node.warn(joke);\n}).catch(error => {\n    node.error(error);\n});",
        "outputs": "0",
        "noerr": 0,
        "x": 244,
        "y": 259,
        "wires": []
    },
    {
        "id": "c349c77a.e98fb8",
        "type": "inject",
        "z": "1fec4b90.1b56f4",
        "name": "run",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "repeat": "",
        "crontab": "",
        "once": false,
        "x": 114,
        "y": 259,
        "wires": [
            [
                "35bd9768.216c88"
            ]
        ]
    },
    {
        "id": "c4d63d77.0991a",
        "type": "function",
        "z": "1fec4b90.1b56f4",
        "name": "resolve",
        "func": "msg.resolve(msg.payload.value.joke);\n\n// reject\n// setTimeout(function () {\n//     msg.reject({message: 'Could not request joke'});\n// }, 2000);",
        "outputs": "0",
        "noerr": 0,
        "x": 660,
        "y": 173,
        "wires": []
    },
    {
        "id": "660e8cd8.377134",
        "type": "comment",
        "z": "1fec4b90.1b56f4",
        "name": "use above flow",
        "info": "",
        "x": 124,
        "y": 219,
        "wires": []
    },
    {
        "id": "f9ca2e1.71ee3d",
        "type": "debug",
        "z": "1fec4b90.1b56f4",
        "name": "",
        "active": true,
        "console": "false",
        "complete": "true",
        "x": 377,
        "y": 83,
        "wires": []
    },
    {
        "id": "3c4ede4d.99d072",
        "type": "debug",
        "z": "1fec4b90.1b56f4",
        "name": "",
        "active": true,
        "console": "false",
        "complete": "true",
        "x": 542,
        "y": 91,
        "wires": []
    },
    {
        "id": "c45f1ac7.617338",
        "type": "debug",
        "z": "1fec4b90.1b56f4",
        "name": "",
        "active": true,
        "console": "false",
        "complete": "true",
        "x": 754,
        "y": 92,
        "wires": []
    },
    {
        "id": "308390c7.2af29",
        "type": "function",
        "z": "1fec4b90.1b56f4",
        "name": "run callback",
        "func": "msg.callback(msg.payload.value.joke.replace(/&quot;/g, '\"'));",
        "outputs": "0",
        "noerr": 0,
        "x": 613,
        "y": 558,
        "wires": []
    },
    {
        "id": "af2fc7b2.757fe8",
        "type": "inject",
        "z": "1fec4b90.1b56f4",
        "name": "",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "repeat": "",
        "crontab": "",
        "once": true,
        "x": 133,
        "y": 558,
        "wires": [
            [
                "c059123.379e7f"
            ]
        ]
    },
    {
        "id": "c059123.379e7f",
        "type": "function",
        "z": "1fec4b90.1b56f4",
        "name": "set getJoke",
        "func": "var getJoke = function(firstname, lastname, callback) {\n    firstname = firstname || 'Chuck';\n    lastname = lastname || 'Norris';\n    \n    // http request\n    msg.url = `http://api.icndb.com/jokes/random?firstName=${firstname}&lastName=${lastname}`;\n    msg.method = 'GET';\n    \n    // assign callback to msg\n    msg.callback = callback;\n    \n    // return copy of msg\n    node.send(Object.assign({}, msg));\n};\n\n\n// make global\nglobal.set('getJoke', getJoke);",
        "outputs": 1,
        "noerr": 0,
        "x": 293,
        "y": 558,
        "wires": [
            [
                "e9d00c74.bbb9c"
            ]
        ]
    },
    {
        "id": "feabadd.208605",
        "type": "comment",
        "z": "1fec4b90.1b56f4",
        "name": "Flow callback example",
        "info": "",
        "x": 143,
        "y": 518,
        "wires": []
    },
    {
        "id": "e9d00c74.bbb9c",
        "type": "http request",
        "z": "1fec4b90.1b56f4",
        "name": "",
        "method": "use",
        "ret": "obj",
        "url": "",
        "tls": "",
        "x": 453,
        "y": 558,
        "wires": [
            [
                "308390c7.2af29"
            ]
        ]
    },
    {
        "id": "2a51a2a7.3eaaee",
        "type": "inject",
        "z": "1fec4b90.1b56f4",
        "name": "",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "repeat": "",
        "crontab": "",
        "once": false,
        "x": 143,
        "y": 598,
        "wires": [
            [
                "e0837b3c.25c928"
            ]
        ]
    },
    {
        "id": "e0837b3c.25c928",
        "type": "function",
        "z": "1fec4b90.1b56f4",
        "name": "run getJoke(firstname, lastname, callback)",
        "func": "global.get('getJoke')('Wesley', 'Stam', function (joke) {\n    msg.payload = joke;\n    node.send(msg);\n});",
        "outputs": 1,
        "noerr": 0,
        "x": 383,
        "y": 598,
        "wires": [
            [
                "1ec5ae1c.2c9112"
            ]
        ]
    },
    {
        "id": "1ec5ae1c.2c9112",
        "type": "debug",
        "z": "1fec4b90.1b56f4",
        "name": "",
        "active": true,
        "console": "false",
        "complete": "false",
        "x": 633,
        "y": 598,
        "wires": []
    },
    {
        "id": "bfb0a5ea.d6e668",
        "type": "inject",
        "z": "c6be1934.85f088",
        "name": "Every 30 minutes",
        "topic": "",
        "payload": "",
        "payloadType": "str",
        "repeat": "1800",
        "crontab": "",
        "once": true,
        "x": 130,
        "y": 40,
        "wires": [
            [
                "fd788715.f25b28"
            ]
        ]
    },
    {
        "id": "7a45445a.19a57c",
        "type": "http request",
        "z": "c6be1934.85f088",
        "name": "Update domains.google.com",
        "method": "GET",
        "url": "https://jbdowsr8JzGj0wnm:2BY3RRZnfwDPoNvQ@domains.google.com/nic/update?hostname=tapiafamily.org&myip={{payload}}",
        "tls": "ccbad4df.c6e028",
        "x": 380,
        "y": 180,
        "wires": [
            [
                "8808be74.62ca9",
                "40fef635.83a858"
            ]
        ]
    },
    {
        "id": "8808be74.62ca9",
        "type": "switch",
        "z": "c6be1934.85f088",
        "name": "Was update sucessful?",
        "property": "payload",
        "rules": [
            {
                "t": "eq",
                "v": "OK"
            },
            {
                "t": "neq",
                "v": "OK"
            }
        ],
        "checkall": "true",
        "outputs": 2,
        "x": 170,
        "y": 260,
        "wires": [
            [
                "f79ddde4.a53c"
            ],
            [
                "a9ee9555.ae0c08",
                "6067afdd.9f727"
            ]
        ]
    },
    {
        "id": "da7dc620.a08048",
        "type": "delay",
        "z": "c6be1934.85f088",
        "name": "One notification/day",
        "pauseType": "rate",
        "timeout": "5",
        "timeoutUnits": "seconds",
        "rate": "1",
        "rateUnits": "day",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": true,
        "x": 460,
        "y": 340,
        "wires": [
            [
                "12307aa6.f5aff5"
            ]
        ]
    },
    {
        "id": "92da787d.76b068",
        "type": "comment",
        "z": "c6be1934.85f088",
        "name": "No",
        "info": "",
        "x": 190,
        "y": 300,
        "wires": []
    },
    {
        "id": "a17eb6ec.29b4c8",
        "type": "comment",
        "z": "c6be1934.85f088",
        "name": "Yes?",
        "info": "",
        "x": 410,
        "y": 260,
        "wires": []
    },
    {
        "id": "a9ee9555.ae0c08",
        "type": "debug",
        "z": "c6be1934.85f088",
        "name": "",
        "active": false,
        "console": false,
        "complete": false,
        "x": 390,
        "y": 300,
        "wires": []
    },
    {
        "id": "f79ddde4.a53c",
        "type": "function",
        "z": "c6be1934.85f088",
        "name": "Reset fail counter",
        "func": "\ncontext.duckdnsfails=0;\nreturn msg;",
        "outputs": "0",
        "noerr": 0,
        "x": 590,
        "y": 260,
        "wires": []
    },
    {
        "id": "6067afdd.9f727",
        "type": "function",
        "z": "c6be1934.85f088",
        "name": "Increment fail counter, check if >5",
        "func": "duckdnsfails = context.duckdnsfails || 0;\nduckdnsfails++;\ncontext.duckdnsfails = duckdnsfails;\n\n//Fsiled to update 5+ times?\nif(duckdnsfails <=6) {\n\treturn [msg,null];\n}\nelse {\n    //shout out last known IP\n    msg.payload=context.lastip;\n\treturn [null,msg];\n}",
        "outputs": "2",
        "x": 200,
        "y": 340,
        "wires": [
            [],
            [
                "da7dc620.a08048"
            ]
        ]
    },
    {
        "id": "e6ab8b0c.73b928",
        "type": "function",
        "z": "c6be1934.85f088",
        "name": "add topic ipaddress",
        "func": "msg.topic = \"ipaddress\";\nreturn msg;\n\n",
        "outputs": "1",
        "noerr": 0,
        "x": 390,
        "y": 140,
        "wires": [
            [
                "328c2bfb.25fd24",
                "51440dc4.c26ca4",
                "229c9b41.faae04"
            ]
        ]
    },
    {
        "id": "fd788715.f25b28",
        "type": "exec",
        "z": "c6be1934.85f088",
        "command": "wget -qO- http://ipv4bot.whatismyipaddress.com/ ; echo",
        "addpay": false,
        "append": "",
        "useSpawn": "",
        "timer": "",
        "oldrc": false,
        "name": "Call IP - ipv4bot whatismyipaddress.com",
        "x": 220,
        "y": 80,
        "wires": [
            [
                "dcd48c82.d9513",
                "84cbe0c.f80882"
            ],
            [],
            []
        ]
    },
    {
        "id": "dcd48c82.d9513",
        "type": "switch",
        "z": "c6be1934.85f088",
        "name": "Integrity check",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "regex",
                "v": "\\b(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\b",
                "vt": "str",
                "case": false
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "outputs": 2,
        "x": 200,
        "y": 120,
        "wires": [
            [
                "e6ab8b0c.73b928",
                "40fef635.83a858"
            ],
            []
        ]
    },
    {
        "id": "12307aa6.f5aff5",
        "type": "debug",
        "z": "c6be1934.85f088",
        "name": "",
        "active": true,
        "console": "false",
        "complete": "true",
        "x": 610,
        "y": 300,
        "wires": []
    },
    {
        "id": "40fef635.83a858",
        "type": "debug",
        "z": "c6be1934.85f088",
        "name": "",
        "active": true,
        "console": "false",
        "complete": "true",
        "x": 610,
        "y": 120,
        "wires": []
    },
    {
        "id": "328c2bfb.25fd24",
        "type": "debug",
        "z": "c6be1934.85f088",
        "name": "",
        "active": false,
        "console": "false",
        "complete": "true",
        "x": 610,
        "y": 160,
        "wires": []
    },
    {
        "id": "84cbe0c.f80882",
        "type": "debug",
        "z": "c6be1934.85f088",
        "name": "",
        "active": false,
        "console": "false",
        "complete": "false",
        "x": 590,
        "y": 80,
        "wires": []
    },
    {
        "id": "e3260de1.a6c37",
        "type": "debug",
        "z": "46e74d68.bf9484",
        "name": "",
        "active": true,
        "console": "false",
        "complete": "true",
        "x": 316,
        "y": 20,
        "wires": []
    },
    {
        "id": "c9542da5.c12b9",
        "type": "function",
        "z": "46e74d68.bf9484",
        "name": "Decode Sensit Payload for Temp Hum",
        "func": "var sensitData = msg.payload.data;\n\nvar byte1 = parseInt(sensitData.substring(0,2),16);\nvar byte2 = parseInt(sensitData.substring(2,4),16);\nvar byte3 = parseInt(sensitData.substring(4,6),16);\nvar byte4 = parseInt(sensitData.substring(6,8),16);\n\n\nvar mode = byte1 & 7;\nmsg.payload.sensitMode = mode;\n\nvar timeframe = (byte1 & 24) >> 3;\nmsg.payload.sensitTimeframe = timeframe;\n\nvar type = (byte1 & 96) >> 5;\nmsg.payload.sensitType = type;\n\nvar batBits = ((byte1>>7)<<4) + (byte2&15);\nmsg.payload.battery = Math.round((batBits * 0.05 *2.7)*100) / 100;\n\nif (mode ==1 ) { //Temperature and Humidity\n // Extract Temperature\n var tempBits = (((byte2&240)<<2) + ((byte3&63)));\n// var temp = Math.round(((tempBits-200)/8)*10) / 10;\n var temp = Math.round(\n     ((tempBits-200)/8*9/5 + 32)*10) / 10;\n msg.payload.temperature = temp;\n \n //Extract Humidity\n var humidity = Math.round(( byte4 * 0.5)*10) / 10;\n msg.payload.humidity = humidity;\n}else{\n    msg = null;\n}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 210,
        "y": 60,
        "wires": [
            [
                "f08717f0.f74068",
                "3d476a12.cb0816",
                "9e7b8eb5.9e091",
                "5d8444d0.47e53c",
                "c5096243.0ea9e"
            ]
        ]
    },
    {
        "id": "f08717f0.f74068",
        "type": "debug",
        "z": "46e74d68.bf9484",
        "name": "",
        "active": false,
        "console": "false",
        "complete": "true",
        "x": 513,
        "y": 60,
        "wires": []
    },
    {
        "id": "3d476a12.cb0816",
        "type": "function",
        "z": "46e74d68.bf9484",
        "name": "Extract Temperature",
        "func": "// return {payload:msg.payload.temperature};\nreturn {\n    payload:msg.payload.temperature,\n    topic: \"sensit/\"+msg.payload.device+\"/temperature\"\n}\n",
        "outputs": 1,
        "noerr": 0,
        "x": 240,
        "y": 120,
        "wires": [
            [
                "6c4ca9eb.baf858"
            ]
        ]
    },
    {
        "id": "9e7b8eb5.9e091",
        "type": "function",
        "z": "46e74d68.bf9484",
        "name": "Extract Humidity",
        "func": "// return {payload:msg.payload.humidity};\nreturn {\n    payload:msg.payload.humidity,\n    topic: \"sensit/\"+msg.payload.device+\"/humidity\"\n}",
        "outputs": 1,
        "noerr": 0,
        "x": 220,
        "y": 160,
        "wires": [
            [
                "6c4ca9eb.baf858"
            ]
        ]
    },
    {
        "id": "6c4ca9eb.baf858",
        "type": "debug",
        "z": "46e74d68.bf9484",
        "name": "",
        "active": false,
        "console": "false",
        "complete": "payload",
        "x": 490,
        "y": 120,
        "wires": []
    },
    {
        "id": "c5096243.0ea9e",
        "type": "function",
        "z": "46e74d68.bf9484",
        "name": "Extract lat lon name",
        "func": "try {\n    msg.payload.name = msg.payload.device;\n}\ncatch (err) {\n    log.error(\"msg.payload.name=\"+ msg.payload.name)\n}\n\nmsg.payload.lon = msg.payload.lng; // sigfox uses lng instead of lon\ndelete msg.payload.lng;\n\nreturn msg ;\n\n",
        "outputs": 1,
        "noerr": 0,
        "x": 260,
        "y": 260,
        "wires": [
            [
                "dca55970.4c23c8"
            ]
        ]
    },
    {
        "id": "5d8444d0.47e53c",
        "type": "function",
        "z": "46e74d68.bf9484",
        "name": "Extract Battery",
        "func": "// return {payload:msg.payload.battery};\nreturn {\n    payload:msg.payload.battery,\n    topic: \"tapia/sigfox/sensit/\"+msg.payload.device+\"/batterylevel\"\n//    topic: \"sensit/1cb19d/batterylevel\"\n}",
        "outputs": 1,
        "noerr": 0,
        "x": 220,
        "y": 200,
        "wires": [
            []
        ]
    },
    {
        "id": "dca55970.4c23c8",
        "type": "debug",
        "z": "46e74d68.bf9484",
        "name": "",
        "active": false,
        "console": "false",
        "complete": "false",
        "x": 481,
        "y": 259,
        "wires": []
    },
    {
        "id": "2689b030.ded59",
        "type": "http in",
        "z": "55542e37.3222d",
        "name": "",
        "url": "/mypage",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 100,
        "y": 47,
        "wires": [
            [
                "3a1fc70f.6a5fd8"
            ]
        ]
    },
    {
        "id": "dddee766.90ea68",
        "type": "http response",
        "z": "55542e37.3222d",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 534,
        "y": 47,
        "wires": []
    },
    {
        "id": "3a1fc70f.6a5fd8",
        "type": "template",
        "z": "55542e37.3222d",
        "name": "",
        "field": "payload",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "This is the payload: {{payload}} !",
        "output": "str",
        "x": 288,
        "y": 47,
        "wires": [
            [
                "dddee766.90ea68"
            ]
        ]
    },
    {
        "id": "cb3975c.448d888",
        "type": "http in",
        "z": "55542e37.3222d",
        "name": "",
        "url": "/sigfox/DISABLEDbecauseIsuspectITisNOTinUSE",
        "method": "post",
        "upload": false,
        "swaggerDoc": "",
        "x": 240,
        "y": 120,
        "wires": [
            [
                "4d54577b.bd94d8",
                "193974ed.c0966b",
                "7ddc0b75.b85f24"
            ]
        ]
    },
    {
        "id": "a337dfa0.69642",
        "type": "http response",
        "z": "55542e37.3222d",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 550,
        "y": 120,
        "wires": []
    },
    {
        "id": "4d54577b.bd94d8",
        "type": "template",
        "z": "55542e37.3222d",
        "name": "",
        "field": "payload",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "This is the payload: {{payload}} !",
        "output": "str",
        "x": 250,
        "y": 160,
        "wires": [
            [
                "a337dfa0.69642"
            ]
        ]
    },
    {
        "id": "193974ed.c0966b",
        "type": "debug",
        "z": "55542e37.3222d",
        "name": "",
        "active": true,
        "console": "false",
        "complete": "true",
        "x": 470,
        "y": 200,
        "wires": []
    },
    {
        "id": "7ddc0b75.b85f24",
        "type": "link out",
        "z": "55542e37.3222d",
        "name": "",
        "links": [
            "4678823d.d3debc"
        ],
        "x": 315,
        "y": 240,
        "wires": []
    },
    {
        "id": "4678823d.d3debc",
        "type": "link in",
        "z": "46e74d68.bf9484",
        "name": "",
        "links": [
            "7ddc0b75.b85f24",
            "a235c197.f9c94"
        ],
        "x": 179,
        "y": 20,
        "wires": [
            [
                "c9542da5.c12b9",
                "e3260de1.a6c37",
                "fd9e1062.39523"
            ]
        ]
    },
    {
        "id": "9737801f.8f399",
        "type": "http in",
        "z": "55542e37.3222d",
        "name": "",
        "url": "/sigfox/sensit",
        "method": "post",
        "upload": false,
        "swaggerDoc": "",
        "x": 121,
        "y": 339,
        "wires": [
            [
                "e9c0f5ca.850598",
                "18f53b4a.9bc6a5",
                "a235c197.f9c94"
            ]
        ]
    },
    {
        "id": "79dabc0f.613094",
        "type": "http response",
        "z": "55542e37.3222d",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 535,
        "y": 339,
        "wires": []
    },
    {
        "id": "e9c0f5ca.850598",
        "type": "template",
        "z": "55542e37.3222d",
        "name": "",
        "field": "payload",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "This is the payload: {{payload}} !",
        "output": "str",
        "x": 338,
        "y": 339,
        "wires": [
            [
                "79dabc0f.613094"
            ]
        ]
    },
    {
        "id": "18f53b4a.9bc6a5",
        "type": "debug",
        "z": "55542e37.3222d",
        "name": "",
        "active": true,
        "console": "false",
        "complete": "true",
        "x": 442,
        "y": 410,
        "wires": []
    },
    {
        "id": "a235c197.f9c94",
        "type": "link out",
        "z": "55542e37.3222d",
        "name": "Sensit",
        "links": [
            "4678823d.d3debc"
        ],
        "x": 273,
        "y": 475,
        "wires": []
    },
    {
        "id": "ccaf6165.06e94",
        "type": "http in",
        "z": "55542e37.3222d",
        "name": "",
        "url": "/sigfox/oleumtech/sfxtr81",
        "method": "post",
        "upload": false,
        "swaggerDoc": "",
        "x": 165,
        "y": 563,
        "wires": [
            [
                "796657f3.305708",
                "13bbb270.22482e",
                "3ddad65a.baa6ca"
            ]
        ]
    },
    {
        "id": "32c413a5.043f8c",
        "type": "http response",
        "z": "55542e37.3222d",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 539,
        "y": 563,
        "wires": []
    },
    {
        "id": "796657f3.305708",
        "type": "template",
        "z": "55542e37.3222d",
        "name": "",
        "field": "payload",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "This is the payload: {{payload}} !",
        "output": "str",
        "x": 387,
        "y": 563,
        "wires": [
            [
                "32c413a5.043f8c"
            ]
        ]
    },
    {
        "id": "13bbb270.22482e",
        "type": "debug",
        "z": "55542e37.3222d",
        "name": "",
        "active": true,
        "console": "false",
        "complete": "true",
        "x": 446,
        "y": 634,
        "wires": []
    },
    {
        "id": "3ddad65a.baa6ca",
        "type": "link out",
        "z": "55542e37.3222d",
        "name": "OleumTech",
        "links": [
            "b1277c56.62047"
        ],
        "x": 277,
        "y": 699,
        "wires": []
    },
    {
        "id": "b544ace4.ba46",
        "type": "debug",
        "z": "16be06b7.63eec9",
        "name": "",
        "active": true,
        "console": "false",
        "complete": "true",
        "x": 312,
        "y": 63,
        "wires": []
    },
    {
        "id": "f9e9ef9.073571",
        "type": "function",
        "z": "16be06b7.63eec9",
        "name": "Decode Sensit Payload for Temp Hum",
        "func": "var sensitData = msg.payload.data;\n\nvar byte1 = parseInt(sensitData.substring(0,2),16);\nvar byte2 = parseInt(sensitData.substring(2,4),16);\nvar byte3 = parseInt(sensitData.substring(4,6),16);\nvar byte4 = parseInt(sensitData.substring(6,8),16);\n\n\nvar mode = byte1 & 7;\nmsg.payload.sensitMode = mode;\n\nvar timeframe = (byte1 & 24) >> 3;\nmsg.payload.sensitTimeframe = timeframe;\n\nvar type = (byte1 & 96) >> 5;\nmsg.payload.sensitType = type;\n\nvar batBits = ((byte1>>7)<<4) + (byte2&15);\nmsg.payload.battery = Math.round((batBits * 0.05 *2.7)*100) / 100;\n\nif (mode ==1 ) { //Temperature and Humidity\n // Extract Temperature\n var tempBits = (((byte2&240)<<2) + ((byte3&63)));\n// var temp = Math.round(((tempBits-200)/8)*10) / 10;\n var temp = Math.round(\n     ((tempBits-200)/8*9/5 + 32)*10) / 10;\n msg.payload.temperature = temp;\n \n //Extract Humidity\n var humidity = Math.round(( byte4 * 0.5)*10) / 10;\n msg.payload.humidity = humidity;\n}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 191,
        "y": 119,
        "wires": [
            [
                "5ff3e7bc.da62c8",
                "edd56f4c.bb2af",
                "583a847e.3b2eec",
                "36b3a0bf.163f5"
            ]
        ]
    },
    {
        "id": "5ff3e7bc.da62c8",
        "type": "debug",
        "z": "16be06b7.63eec9",
        "name": "",
        "active": true,
        "console": "false",
        "complete": "true",
        "x": 494,
        "y": 119,
        "wires": []
    },
    {
        "id": "edd56f4c.bb2af",
        "type": "function",
        "z": "16be06b7.63eec9",
        "name": "Extract Temperature",
        "func": "// return {payload:msg.payload.temperature};\nreturn {\n    payload:msg.payload.temperature,\n    topic: \"tapia/sigfox/sensit/\"+msg.payload.device+\"/temperature\"\n}\n",
        "outputs": 1,
        "noerr": 0,
        "x": 252,
        "y": 166,
        "wires": [
            [
                "f1eb0f13.13d07",
                "64461ff3.8f8c1"
            ]
        ]
    },
    {
        "id": "583a847e.3b2eec",
        "type": "function",
        "z": "16be06b7.63eec9",
        "name": "Extract Humidity",
        "func": "// return {payload:msg.payload.humidity};\nreturn {\n    payload:msg.payload.humidity,\n    topic: \"tapia/sigfox/sensit/\"+msg.payload.device+\"/humidity\"\n}",
        "outputs": 1,
        "noerr": 0,
        "x": 232,
        "y": 206,
        "wires": [
            [
                "f1eb0f13.13d07",
                "64461ff3.8f8c1"
            ]
        ]
    },
    {
        "id": "f1eb0f13.13d07",
        "type": "debug",
        "z": "16be06b7.63eec9",
        "name": "",
        "active": true,
        "console": "false",
        "complete": "payload",
        "x": 482,
        "y": 246,
        "wires": []
    },
    {
        "id": "36b3a0bf.163f5",
        "type": "function",
        "z": "16be06b7.63eec9",
        "name": "Extract Battery",
        "func": "// return {payload:msg.payload.battery};\nreturn {\n    payload:msg.payload.battery,\n    topic: \"tapia/sigfox/sensit/\"+msg.payload.device+\"/batterylevel\"\n//    topic: \"tapia/sigfox/sensit/1cb19d/batterylevel\"\n}",
        "outputs": 1,
        "noerr": 0,
        "x": 232,
        "y": 286,
        "wires": [
            [
                "64461ff3.8f8c1"
            ]
        ]
    },
    {
        "id": "b1277c56.62047",
        "type": "link in",
        "z": "16be06b7.63eec9",
        "name": "OleumTech",
        "links": [
            "3ddad65a.baa6ca",
            "f742866b.ce3778"
        ],
        "x": 175,
        "y": 63,
        "wires": [
            [
                "f9e9ef9.073571",
                "b544ace4.ba46"
            ]
        ]
    },
    {
        "id": "64461ff3.8f8c1",
        "type": "link out",
        "z": "16be06b7.63eec9",
        "name": "",
        "links": [
            "c30c472a.3b5e98",
            "e2e47a81.0c7da8",
            "a1e76248.eab86"
        ],
        "x": 438,
        "y": 371,
        "wires": []
    },
    {
        "id": "fd9e1062.39523",
        "type": "function",
        "z": "46e74d68.bf9484",
        "name": "Decode Sensit Payload IN FULL (WIP)",
        "func": "var sensitData = msg.payload.data;\n\nvar byte1 = parseInt(sensitData.substring(0,2),16);\nvar byte2 = parseInt(sensitData.substring(2,4),16);\nvar byte3 = parseInt(sensitData.substring(4,6),16);\nvar byte4 = parseInt(sensitData.substring(6,8),16);\n\nvar mode = byte1 & 7;\nmsg.payload.sensitMode = mode.toString();\nswitch (mode) {\n    case 0:\n        msg.payload.sensitModeString = \"button\";\n        break;\n    case 1:\n        msg.payload.sensitModeString = \"temp+hum\";\n        break;\n    case 2:\n        msg.payload.sensitModeString = \"light\";\n        break;\n    case 3:\n        msg.payload.sensitModeString = \"door\";\n        break;\n    case 4:\n        msg.payload.sensitModeString = \"move\";\n        break;\n    case 5:\n        msg.payload.sensitModeString = \"magnet\";\n        break;\n    }\n\nvar timeframe = (byte1 & 24) >> 3;\nmsg.payload.sensitTimeframe = timeframe.toString();\nswitch (timeframe) {\n    case 0:\n        msg.payload.sensitTimeframeMinutes = 10;\n        break;\n    case 1:\n        msg.payload.sensitTimeframeMinutes = 60;\n        break;\n    case 2:\n        msg.payload.sensitTimeframeMinutes = 360;\n        break;\n    case 3:\n        msg.payload.sensitTimeframeMinutes = 1440;\n        break;\n    }\nmsg.payload.sensitTimeframeMinutes = msg.payload.sensitTimeframeMinutes.toString();\n\nmsg.payload.sensitTimeframeString = msg.payload.sensitTimeframeMinutes + \" min\";\n\nvar type = (byte1 & 96) >> 5;\nmsg.payload.sensitType = type.toString();\nswitch (type) {\n    case 0:\n        msg.payload.sensitTypeString = \"Regular\";\n        break;\n    case 1:\n        msg.payload.sensitTypeString = \"Button Call\";\n        break;\n    case 2:\n        msg.payload.sensitTypeString = \"Alert\";\n        break;\n    case 3:\n        msg.payload.sensitTypeString = \"New Mode\";\n        break;\n    }\n\nvar batBits = ((byte1>>7)<<4) + (byte2&15);\nmsg.payload.battery = Math.round((batBits * 0.05 *2.7)*100) / 100;\nmsg.payload.battery = msg.payload.battery.toString();\n\n/*\n{temperature note:\nwhen not in \"T° + humidity\" Mode 1 we only have the 4 bit MSB so\nwe only have resolution of 14.4 °F\n0000>0000 000000>  0 dec>(  0-200)/8>-25°C>(-1*9/5)+32>-13.0°F\n0001>\t\t\t\t\t\t\t\t\t\t\t\t     1.4°F\n0010>\t\t\t\t\t\t\t\t\t\t\t\t    15.8°F\n0011>0011 000000>192 dec>(192-200)/8> -1°C>(-1*9/5)+32> 30.2°F\n0100>0100 000000>256 dec>(256-200)/8>  7°C>( 7*9/5)+32> 44.6°F\n0101>0101 000000>320 dec>(320-200)/8> 15°C>(15*9/5)+32> 59.0°F\n0110>0110 000000>384 dec>(384-200)/8> 23°C>(23*9/5)+32> 73.4°F\n0111>0111 000000>448 dec>(448-200)/8> 31°C>(31*9/5)+32> 87.8°F\n1000>\t\t\t\t\t\t\t\t\t\t\t\t   102.2°F\n1001>\t\t\t\t\t\t\t\t\t\t\t\t   116.6°F\n1010>\t\t\t\t\t\t\t\t\t\t\t\t   131.0°F\n1011>\t\t\t\t\t\t\t\t\t\t\t\t   145.4°F\n1100>\t\t\t\t\t\t\t\t\t\t\t\t   174.2°F\n1101>\t\t\t\t\t\t\t\t\t\t\t\t   188.6°F\n1110>\t\t\t\t\t\t\t\t\t\t\t\t   203.0°F\n1111>\t\t\t\t\t\t\t\t\t\t\t\t   217.4°F\nend}\n*/\n// Extract rough temperature in any mode\nvar tempBits = (((byte2&240)<<2));\nvar temp = Math.round(\n    ((tempBits-200)/8*9/5 + 32)*10) / 10;\nmsg.payload.roughtemperature = temp.toString();\n\nif (mode==1) { //Temperature and Humidity\n    // Extract Temperature (full resolution)\n    tempBits = (((byte2&240)<<2) + ((byte3&63)));\n    temp = Math.round(((tempBits-200)/8*9/5 + 32)*10) / 10;\n    msg.payload.temperature = temp.toString();\n    \n    //Extract Humidity\n    var humidity = Math.round(( byte4 * 0.5)*10) / 10;\n    msg.payload.humidity = humidity.toString();\n}\n\n// light mode\nif (mode==2) {\n    var lightBits = (byte3&63);\n    var lightMultBits = ((byte3&192)>>6);\n    var light = 0.01 * lightBits;\n    switch (lightMultBits) {\n    case 0:\n        break;\n    case 1:\n        light = light*8;\n        break;\n    case 2:\n        light = light*64;\n        break;\n    case 3:\n        light = light*2014;\n        break;\n    }\n    msg.payload.light = light.toString();\n}\n// if not temp+hum mode (all other modes such as button,light,door,move,magnet)\n// then byte 4 is the alert count\nif (mode!=1){\n    msg.payload.counter = byte4.toString();\n}\n\nmsg.topic = \"sigfox/sensit/\"+msg.payload.device;\nmsg.timestamp = msg.payload.time*1000;//convert sigfox epoch seconds into node-red epoch milliseconds and store as msg.timmestamp\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 230,
        "y": 340,
        "wires": [
            [
                "d361fd96.ecf41",
                "feef4a4e.553278"
            ]
        ]
    },
    {
        "id": "d361fd96.ecf41",
        "type": "debug",
        "z": "46e74d68.bf9484",
        "name": "",
        "active": true,
        "console": "false",
        "complete": "true",
        "x": 510,
        "y": 340,
        "wires": []
    },
    {
        "id": "feef4a4e.553278",
        "type": "link out",
        "z": "46e74d68.bf9484",
        "name": "Multitopic from DecodeSigfoxSensits",
        "links": [
            "84d2eb34.ae0af8",
            "cd41d8e1.598608",
            "a784aaf8.508e78",
            "ee6c2e98.e7b85"
        ],
        "x": 545,
        "y": 383,
        "wires": []
    },
    {
        "id": "84d2eb34.ae0af8",
        "type": "link in",
        "z": "e8223701.eebbe8",
        "name": "NOT tapia/home related topics to Wonderware",
        "links": [
            "feef4a4e.553278"
        ],
        "x": 195,
        "y": 280,
        "wires": [
            [
                "7de4fca4.680f64"
            ]
        ]
    },
    {
        "id": "7de4fca4.680f64",
        "type": "function",
        "z": "e8223701.eebbe8",
        "name": "prefix tapia/home/",
        "func": "var prefix = \"tapia/home/\";\nif (msg.topic.startsWith(prefix)){\n    \n}else{\n    msg.topic = prefix + msg.topic;\n}\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "x": 430,
        "y": 300,
        "wires": [
            [
                "8b940ec1.056b4",
                "1913fb4e.05ae35"
            ]
        ]
    },
    {
        "id": "89b4a504.7f21e8",
        "type": "function",
        "z": "e8223701.eebbe8",
        "name": "config http",
        "func": "// configure http (headers,url,method)\nmsg.headers = {\n//    \"Authorization\" : msg.authorization,\n    \"Content-type\" : \"application/json\"\n};\nmsg.url = \"https://online.wonderware.com/apis/upload/datasource\";\nmsg.method = \"POST\";\n\nmsg.headers.Authorization = msg.Authorization;  //copy Authorization to be under headers\ndelete msg.Authorization;                       // and remove from old location\nreturn msg;\n\n\n/*\nThe following works (replace token with real one):\nmsg.headers = {\n    \"Authorization\" : \"Bearer aThisIsMyFakeTokenYourWillBeLonger-AjsTIEvRKKQ\",\n    \"Content-type\" : \"application/json\"\n    };\nmsg.url = \"https://online.wonderware.com/apis/upload/datasource\";\nmsg.method = \"POST\";\n*/\n",
        "outputs": 1,
        "noerr": 0,
        "x": 750,
        "y": 120,
        "wires": [
            [
                "6fa21a86.e6d6d4",
                "c2c9f38.db1451"
            ]
        ]
    },
    {
        "id": "b09a5356.307a4",
        "type": "inject",
        "z": "e8223701.eebbe8",
        "name": "",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "repeat": "10",
        "crontab": "",
        "once": false,
        "x": 110,
        "y": 120,
        "wires": [
            [
                "40e3d262.b63afc"
            ]
        ]
    },
    {
        "id": "ec1ff4f0.8a3f18",
        "type": "function",
        "z": "e8223701.eebbe8",
        "name": "Format WW payload",
        "func": "msg.payload = JSON.stringify(msg.payload,null,\"\\t\");\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "x": 520,
        "y": 120,
        "wires": [
            [
                "78534302.56589c"
            ]
        ]
    },
    {
        "id": "b1169713.b0ff48",
        "type": "comment",
        "z": "e8223701.eebbe8",
        "name": "wwQueue processing",
        "info": "",
        "x": 120,
        "y": 80,
        "wires": []
    },
    {
        "id": "67b11cc1.5bfab4",
        "type": "rbe",
        "z": "50466fda.5d00f",
        "name": "",
        "func": "rbe",
        "gap": "",
        "start": "",
        "inout": "out",
        "x": 1090,
        "y": 400,
        "wires": [
            [
                "9cd45335.9c179",
                "cf55e901.124768"
            ]
        ]
    },
    {
        "id": "1913fb4e.05ae35",
        "type": "function",
        "z": "e8223701.eebbe8",
        "name": "wwQueue insert",
        "func": "/*20171208 \ninput message should contain:\nmsg.timestamp ie 1514764800000 is an epoch milliseconds timestamp representing 2018.01.01. at 00:00:00.000\n (if msg.timestamp does not exist then \"now\" will be used)\neither single value-based payload:\n    msg.payload ie 72.1 or any string or number representing the value for the topic\n    msg.topic ie diningroom/temperature\nor multi-variable object-based payload containing property : value pairs (use . as delimiter)\n    https://stackoverflow.com/questions/1661197/what-characters-are-valid-for-javascript-variable-names\n    msg.payload ie {basement$temperature : 72.1, diningroom$temperature: 73.2}\n    msg.topic ie wisconsin/summerhome becomes the prefix for each item, creating final items such as wisconsin/summerhome/basement/temperature\n*/\nvar wwQueue = flow.get('wwQueue') ||{\"data\":[]};\n//var dt = new Date(); // defaults to now //var dtstring = dt.toISOString();\n//use timestamp if it exists otherwise default to now\nif ((typeof msg.timestamp !== 'undefined')){dtstring = new Date(msg.timestamp).toISOString();} \nelse {dtstring = new Date().toISOString();}\n\ni = 0;\nwhile (\n    (typeof wwQueue.data !== 'undefined') &&\n    (typeof wwQueue.data[i] !== 'undefined') &&\n    (typeof wwQueue.data[i].dateTime !== 'undefined') &&\n    (new Date(wwQueue.data[i].dateTime).getTime() > new Date(dtstring).getTime()) //while we find newer dates keep looking \n) {i++;}\n\nvar obj = {};\nif (\n    (typeof wwQueue.data !== 'undefined')&&\n    (typeof wwQueue.data[i] !== 'undefined')&&\n    (typeof wwQueue.data[i].dateTime !== 'undefined')&&\n    (new Date(wwQueue.data[i].dateTime).getTime() == new Date(dtstring).getTime()) //if exact date found then we need to handle existing\n) {\n    obj = wwQueue.data.splice(i,1)[0];\n} else {\n    obj.dateTime = dtstring;\n}\n\nif (typeof msg.payload !== \"object\"){\n    var tag = msg.topic.replace(/\\//g,\".\"); //globally replace / with .\n    obj[tag]=msg.payload;//add new tag and value to this dateTime record\n} else {\n    var prefix = msg.topic.replace(/\\//g,\".\") + \".\";\n    var tag = \"\";\n    for(var propertyName in msg.payload) {\n        tag = prefix  + propertyName;//propertyName.replace(/\\$/g,\".\") was going to use $ delimiter but dot \".\" works \n        obj[tag] = msg.payload[propertyName];\n//        node.error(JSON.stringify(obj,null, 4));\n    }\n}\nwwQueue.data.splice(i,0,obj); //add new, full dateTime record back to all record data in the right spot\n\nflow.set('wwQueue',wwQueue);\nmsg.topic = \"tapia/home\";\nmsg.payload = wwQueue;\n\nreturn msg;\n\n/*\nexample from online.wonderware.com\n{\n  \"data\": [\n    {\n      \"dateTime\": \"2017-03-20T12:21:12.199Z\",\n      \"Reactor3.Level\": 1.51860072870498,\n      \"Reactor3.Temp\": 27.1360543141452,\n      \"Reactor3.InletValve\": 0,\n      \"Reactor3.Step\": 7,\n      \"Line3.Units\": 1518,\n      \"Line3.Product\": \"BRN\"\n    }\n  ]\n}\n*/\n",
        "outputs": 1,
        "noerr": 0,
        "x": 300,
        "y": 200,
        "wires": [
            []
        ]
    },
    {
        "id": "40e3d262.b63afc",
        "type": "function",
        "z": "e8223701.eebbe8",
        "name": "wwQueue process",
        "func": "\nvar wwQueue = flow.get('wwQueue') || null;\nflow.set('wwQueue',null); //delete processed json from global context\nmsg.payload = wwQueue;\nif (!msg.payload) {\n    msg = null;\n}\n//msg.payload = JSON.stringify(wwQueue,null,\"\\t\");\n\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "x": 310,
        "y": 120,
        "wires": [
            [
                "ec1ff4f0.8a3f18"
            ]
        ]
    },
    {
        "id": "a7854503.a6f5e8",
        "type": "inject",
        "z": "e8223701.eebbe8",
        "name": "",
        "topic": "",
        "payload": "",
        "payloadType": "num",
        "repeat": "60",
        "crontab": "",
        "once": true,
        "x": 90,
        "y": 500,
        "wires": [
            [
                "727637d9.5f7708"
            ]
        ]
    },
    {
        "id": "727637d9.5f7708",
        "type": "exec",
        "z": "e8223701.eebbe8",
        "command": "vcgencmd",
        "addpay": false,
        "append": "measure_temp",
        "useSpawn": "",
        "timer": "",
        "oldrc": false,
        "name": "getCPUtemp",
        "x": 330,
        "y": 480,
        "wires": [
            [
                "508af0fb.c62c4"
            ],
            [],
            []
        ]
    },
    {
        "id": "508af0fb.c62c4",
        "type": "function",
        "z": "e8223701.eebbe8",
        "name": "CPU Temp Function",
        "func": "//msg.payload = {'d':{'temp': parseFloat(msg.payload.replace(\"temp=\",\"\").replace(\"'C\\n\",\"\"))}};\n//temp in F where max op of 85C = 185F\nmsg.payload = Math.round(\n    (parseFloat(msg.payload.replace(\"temp=\",\"\").replace(\"'C\\n\",\"\")) * 9/5 + 32)*10)/10;\nmsg.topic = \"rpishare/cpu/temperature\";\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 540,
        "y": 500,
        "wires": [
            [
                "7de4fca4.680f64"
            ]
        ]
    },
    {
        "id": "d5dd5053.fa2d4",
        "type": "comment",
        "z": "e8223701.eebbe8",
        "name": "Check CPU's Temperature",
        "info": "",
        "x": 130,
        "y": 460,
        "wires": []
    },
    {
        "id": "58379b8e.bd5164",
        "type": "inject",
        "z": "e8223701.eebbe8",
        "name": "show queue",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "repeat": "",
        "crontab": "",
        "once": false,
        "x": 110,
        "y": 160,
        "wires": [
            [
                "810817eb.dbcb88"
            ]
        ]
    },
    {
        "id": "810817eb.dbcb88",
        "type": "function",
        "z": "e8223701.eebbe8",
        "name": "show wwQueue",
        "func": "var wwQueue = flow.get('wwQueue') || null;\nmsg.payload = wwQueue;\nif (!msg.payload) {\n    msg = null;\n}\n\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "x": 300,
        "y": 160,
        "wires": [
            [
                "bc9e74de.3876b8"
            ]
        ]
    },
    {
        "id": "bc9e74de.3876b8",
        "type": "debug",
        "z": "e8223701.eebbe8",
        "name": "",
        "active": true,
        "console": "false",
        "complete": "true",
        "x": 950,
        "y": 160,
        "wires": []
    },
    {
        "id": "e25a26c9.0cabb8",
        "type": "comment",
        "z": "e8223701.eebbe8",
        "name": "Main inputs",
        "info": "",
        "x": 90,
        "y": 260,
        "wires": []
    },
    {
        "id": "6713f478.3b3f1c",
        "type": "comment",
        "z": "e8223701.eebbe8",
        "name": "MQTT processing",
        "info": "",
        "x": 730,
        "y": 260,
        "wires": []
    },
    {
        "id": "e520b0c4.168a8",
        "type": "link out",
        "z": "c6be1934.85f088",
        "name": "",
        "links": [
            "cd635b32.ae5f48"
        ],
        "x": 575,
        "y": 220,
        "wires": []
    },
    {
        "id": "229c9b41.faae04",
        "type": "rbe",
        "z": "c6be1934.85f088",
        "name": "",
        "func": "rbe",
        "gap": "",
        "start": "",
        "inout": "out",
        "x": 490,
        "y": 220,
        "wires": [
            [
                "e520b0c4.168a8"
            ]
        ]
    },
    {
        "id": "51440dc4.c26ca4",
        "type": "function",
        "z": "c6be1934.85f088",
        "name": "Compare IP",
        "func": "context.lastip = context.lastip || 'initial';\nvar currentip = msg.payload;\n\n//if (context.lastip == 'initial') {\n//context.lastip = currentip;\n//}\n//else if (context.lastip != currentip) {\n\nif (context.lastip != currentip) {\n    msg.topic = \"ipaddress\";\n    msg.payload = currentip;\n    context.lastip = currentip;\n    return msg;\n}\n\n",
        "outputs": "1",
        "noerr": 0,
        "x": 170,
        "y": 180,
        "wires": [
            [
                "7a45445a.19a57c"
            ]
        ]
    },
    {
        "id": "c2c9f38.db1451",
        "type": "debug",
        "z": "e8223701.eebbe8",
        "name": "",
        "active": false,
        "console": "false",
        "complete": "true",
        "x": 950,
        "y": 80,
        "wires": []
    },
    {
        "id": "455a6f2d.d08ef",
        "type": "http in",
        "z": "55542e37.3222d",
        "name": "",
        "url": "/mysensors/gateway",
        "method": "post",
        "upload": false,
        "swaggerDoc": "",
        "x": 150,
        "y": 780,
        "wires": [
            [
                "edf87573.dc7ed8",
                "53455b97.0d8344"
            ]
        ]
    },
    {
        "id": "4ec0782d.b528b8",
        "type": "http response",
        "z": "55542e37.3222d",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 544,
        "y": 780,
        "wires": []
    },
    {
        "id": "edf87573.dc7ed8",
        "type": "template",
        "z": "55542e37.3222d",
        "name": "",
        "field": "payload",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "This is the payload: {{payload}} !",
        "output": "str",
        "x": 392,
        "y": 780,
        "wires": [
            [
                "4ec0782d.b528b8"
            ]
        ]
    },
    {
        "id": "53455b97.0d8344",
        "type": "debug",
        "z": "55542e37.3222d",
        "name": "",
        "active": true,
        "console": "false",
        "complete": "true",
        "x": 451,
        "y": 851,
        "wires": []
    },
    {
        "id": "78534302.56589c",
        "type": "credentials",
        "z": "e8223701.eebbe8",
        "name": "ENTER YOUR Wonderware Data Source (Data Upload) Bearer Token HERE",
        "props": [
            {
                "value": "Authorization",
                "type": "msg"
            }
        ],
        "x": 710,
        "y": 20,
        "wires": [
            [
                "89b4a504.7f21e8"
            ]
        ]
    },
    {
        "id": "5f8cf579.c95d6c",
        "type": "comment",
        "z": "c201e10a.3d66f",
        "name": "Run MQTT Broker Locally in Node-RED",
        "info": "",
        "x": 150,
        "y": 20,
        "wires": []
    },
    {
        "id": "bd5bc8d3.084e48",
        "type": "comment",
        "z": "c201e10a.3d66f",
        "name": "Configure YOUR Remote MQTT Broker connection here ",
        "info": "",
        "x": 200,
        "y": 260,
        "wires": []
    },
    {
        "id": "2ac83a5a.c57626",
        "type": "mqtt in",
        "z": "c201e10a.3d66f",
        "name": "CONFIGURE YOUR REMOTE (like shiftr.io) MQTT BROKER INFO HERE",
        "topic": "$SYS/#",
        "qos": "0",
        "broker": "27dbe3bb.c30aec",
        "x": 280,
        "y": 300,
        "wires": [
            []
        ]
    },
    {
        "id": "8b940ec1.056b4",
        "type": "link out",
        "z": "e8223701.eebbe8",
        "name": "WonderwareToMQTTOutputLink",
        "links": [
            "543addd1.376954",
            "3c87aa50.8e7256"
        ],
        "x": 715,
        "y": 300,
        "wires": []
    },
    {
        "id": "543addd1.376954",
        "type": "link in",
        "z": "c201e10a.3d66f",
        "name": "WonderwareToMQTTOutputLink",
        "links": [
            "8b940ec1.056b4"
        ],
        "x": 175,
        "y": 360,
        "wires": [
            [
                "c27b7891.9b51c8"
            ]
        ]
    },
    {
        "id": "5fed1231.75455c",
        "type": "mqtt out",
        "z": "c201e10a.3d66f",
        "name": "mqtt to Shiftr.io",
        "topic": "",
        "qos": "0",
        "retain": "false",
        "broker": "27dbe3bb.c30aec",
        "x": 615,
        "y": 360,
        "wires": []
    },
    {
        "id": "c27b7891.9b51c8",
        "type": "function",
        "z": "c201e10a.3d66f",
        "name": "payload object to individual payloads",
        "func": "if (typeof msg.payload == \"object\"){\n    var newmsg = [];\n    var prefix = msg.topic+\"/\";\n/*  two differ ways to iterate through payload.properties\n    1. with Object.keys(msg.payload)\n    2. with for propertyname in msg.payload\n    *went with 2*\n    var keys = Object.keys(msg.payload);\n    var obj = {};\n    for (i=0; i<keys.length; i++) { //    node.warn(\"iterating keys with keys[\"+i+\"]=\"+keys[i]);\n        obj[prefix+keys[i]] = msg.payload[keys[i]];\n    }\n*/\n    for(var propertyName in msg.payload) {\n        newmsg.push({\n            topic : prefix  + propertyName,\n            payload : msg.payload[propertyName]\n        });\n    }\n    msg = newmsg;\n}\nreturn [msg];\n",
        "outputs": 1,
        "noerr": 0,
        "x": 365,
        "y": 360,
        "wires": [
            [
                "5fed1231.75455c",
                "570ea412.7b645c",
                "1dc3ed7a.081c13"
            ]
        ]
    },
    {
        "id": "570ea412.7b645c",
        "type": "debug",
        "z": "c201e10a.3d66f",
        "name": "",
        "active": false,
        "console": "false",
        "complete": "true",
        "x": 585,
        "y": 420,
        "wires": []
    },
    {
        "id": "824a49d7.4a9e88",
        "type": "trigger",
        "z": "984823b1.a0823",
        "op1": "",
        "op2": "{\"payload\":\"OFF\"}",
        "op1type": "nul",
        "op2type": "json",
        "duration": "120",
        "extend": true,
        "units": "s",
        "reset": "CANCEL",
        "bytopic": "all",
        "name": "",
        "x": 650,
        "y": 120,
        "wires": [
            [
                "4f19939b.8c2abc"
            ]
        ]
    },
    {
        "id": "97c86336.23be6",
        "type": "function",
        "z": "984823b1.a0823",
        "name": "only if  OFF",
        "func": "switch (msg.payload)\n{\n    case 0:\n    case \"0\":\n    case false:\n    case \"false\":\n    case \"FALSE\":\n    case \"off\":\n    case \"OFF\":\n        msg.payload = \"OFF\";\n        break;\n/*\n    case 1:\n    case \"1\":\n    case true:\n    case \"true\":\n    case \"TRUE\":\n    case \"on\":\n    case \"ON\":\n        msg.payload = \"ON\";\n        break;\n*/        \n    default:\n        msg=null;\n        break;\n}\nreturn msg;\n\n\n/*\nswitch (msg.payload)\n{\n    case 0:\n    case \"0\":\n    case false:\n    case \"false\":\n    case \"FALSE\":\n    case \"off\":\n    case \"OFF\":\n        msg.payload = \"OFF\";\n        break;\n    case 1:\n    case \"1\":\n    case true:\n    case \"true\":\n    case \"TRUE\":\n    case \"on\":\n    case \"ON\":\n        msg.payload = \"ON\";\n        break;\n        \n    default:\n        break;\n}\nreturn msg;\n*/\n\n",
        "outputs": 1,
        "noerr": 0,
        "x": 590,
        "y": 60,
        "wires": [
            [
                "43593966.b74ba8",
                "824a49d7.4a9e88"
            ]
        ]
    },
    {
        "id": "43593966.b74ba8",
        "type": "function",
        "z": "984823b1.a0823",
        "name": "send ON",
        "func": "msg.payload=\"ON\"\nreturn msg;\n\n/*\nswitch (msg.payload)\n{\n    case 0:\n    case \"0\":\n    case false:\n    case \"false\":\n    case \"FALSE\":\n    case \"off\":\n    case \"OFF\":\n        msg.payload = \"OFF\";\n        break;\n    case 1:\n    case \"1\":\n    case true:\n    case \"true\":\n    case \"TRUE\":\n    case \"on\":\n    case \"ON\":\n        msg.payload = \"ON\";\n        break;\n        \n    default:\n        break;\n}\nreturn msg;\n*/\n\n",
        "outputs": 1,
        "noerr": 0,
        "x": 740,
        "y": 60,
        "wires": [
            [
                "5d6b642d.dc6f4c",
                "f70a39ef.e5f2f8"
            ]
        ]
    },
    {
        "id": "ddef56a9.1fd1a8",
        "type": "comment",
        "z": "984823b1.a0823",
        "name": "Powder Room Fan ON if Light OFF and Fan OFF minutes later if Fan not manually controlled",
        "info": "",
        "x": 340,
        "y": 20,
        "wires": []
    },
    {
        "id": "1a556d94.a97882",
        "type": "comment",
        "z": "984823b1.a0823",
        "name": "Master VanityLight OFF after time",
        "info": "",
        "x": 150,
        "y": 240,
        "wires": []
    },
    {
        "id": "4f19939b.8c2abc",
        "type": "function",
        "z": "984823b1.a0823",
        "name": "send OFF",
        "func": "msg.payload=\"OFF\"\nreturn msg;\n\n/*\nswitch (msg.payload)\n{\n    case 0:\n    case \"0\":\n    case false:\n    case \"false\":\n    case \"FALSE\":\n    case \"off\":\n    case \"OFF\":\n        msg.payload = \"OFF\";\n        break;\n    case 1:\n    case \"1\":\n    case true:\n    case \"true\":\n    case \"TRUE\":\n    case \"on\":\n    case \"ON\":\n        msg.payload = \"ON\";\n        break;\n        \n    default:\n        break;\n}\nreturn msg;\n*/\n\n",
        "outputs": 1,
        "noerr": 0,
        "x": 780,
        "y": 120,
        "wires": [
            [
                "5d6b642d.dc6f4c",
                "f70a39ef.e5f2f8"
            ]
        ]
    },
    {
        "id": "284b6a26.2a1196",
        "type": "function",
        "z": "984823b1.a0823",
        "name": "CANCEL if  OFF",
        "func": "switch (msg.payload)\n{\n    case 0:\n    case \"0\":\n    case false:\n    case \"false\":\n    case \"FALSE\":\n    case \"off\":\n    case \"OFF\":\n        msg.payload = \"CANCEL\";\n        break;\n/*\n    case 1:\n    case \"1\":\n    case true:\n    case \"true\":\n    case \"TRUE\":\n    case \"on\":\n    case \"ON\":\n        msg.payload = \"ON\";\n        break;\n*/        \n    default:\n        msg=null;\n        break;\n}\nreturn msg;\n\n\n/*\nswitch (msg.payload)\n{\n    case 0:\n    case \"0\":\n    case false:\n    case \"false\":\n    case \"FALSE\":\n    case \"off\":\n    case \"OFF\":\n        msg.payload = \"OFF\";\n        break;\n    case 1:\n    case \"1\":\n    case true:\n    case \"true\":\n    case \"TRUE\":\n    case \"on\":\n    case \"ON\":\n        msg.payload = \"ON\";\n        break;\n        \n    default:\n        break;\n}\nreturn msg;\n*/\n\n",
        "outputs": 1,
        "noerr": 0,
        "x": 480,
        "y": 120,
        "wires": [
            [
                "824a49d7.4a9e88"
            ]
        ]
    },
    {
        "id": "5dcf2f10.86981",
        "type": "mqtt in",
        "z": "984823b1.a0823",
        "name": "",
        "topic": "insteon/flr1_powderroom/state",
        "qos": "2",
        "broker": "971eda83.260398",
        "x": 140,
        "y": 60,
        "wires": [
            [
                "2c54d816.9b6ae8"
            ]
        ]
    },
    {
        "id": "f70a39ef.e5f2f8",
        "type": "debug",
        "z": "984823b1.a0823",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "x": 930,
        "y": 60,
        "wires": []
    },
    {
        "id": "ae94c7b6.0c2d28",
        "type": "mqtt in",
        "z": "984823b1.a0823",
        "name": "bsmt_officesmall_spare_lamplinc_18.93.3c/state",
        "topic": "insteon/bsmt_officesmall_spare_lamplinc_18.93.3c/state",
        "qos": "2",
        "broker": "971eda83.260398",
        "x": 200,
        "y": 700,
        "wires": [
            [
                "c5f1953a.314208"
            ]
        ]
    },
    {
        "id": "7502f25.a3ec60c",
        "type": "debug",
        "z": "984823b1.a0823",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "x": 750,
        "y": 700,
        "wires": []
    },
    {
        "id": "fcfd9d45.67e74",
        "type": "mqtt in",
        "z": "984823b1.a0823",
        "name": "",
        "topic": "#",
        "qos": "2",
        "broker": "971eda83.260398",
        "x": 70,
        "y": 640,
        "wires": [
            [
                "e454fb33.9a59f8"
            ]
        ]
    },
    {
        "id": "bb0b2c50.7562e",
        "type": "debug",
        "z": "984823b1.a0823",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "x": 750,
        "y": 640,
        "wires": []
    },
    {
        "id": "b4aef7f1.a12b78",
        "type": "inject",
        "z": "984823b1.a0823",
        "name": "",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "x": 120,
        "y": 1000,
        "wires": [
            [
                "e650743f.56d978"
            ]
        ]
    },
    {
        "id": "bc358d80.6a0d7",
        "type": "comment",
        "z": "984823b1.a0823",
        "name": "lamplinc tests 18.93.3c",
        "info": "",
        "x": 120,
        "y": 900,
        "wires": []
    },
    {
        "id": "e650743f.56d978",
        "type": "function",
        "z": "984823b1.a0823",
        "name": "*WORKS* ",
        "func": "msg.topic = 'insteon/command/bsmt_officesmall_spare_lamplinc_18.93.3c';\nmsg.payload = '{ \"cmd\": \"off\", \"instant\" : 0 }';\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 430,
        "y": 1000,
        "wires": [
            [
                "710d3950.694438"
            ]
        ]
    },
    {
        "id": "710d3950.694438",
        "type": "mqtt out",
        "z": "984823b1.a0823",
        "name": "",
        "topic": "",
        "qos": "",
        "retain": "",
        "broker": "971eda83.260398",
        "x": 650,
        "y": 960,
        "wires": []
    },
    {
        "id": "8daed7f0.37af18",
        "type": "inject",
        "z": "984823b1.a0823",
        "name": "insteon/command/name { \"cmd\": \"off\", \"instant\" : 1 }",
        "topic": "insteon/command/bsmt_officesmall_spare_lamplinc_18.93.3c",
        "payload": "{ \"cmd\": \"off\", \"instant\" : 1 }",
        "payloadType": "json",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "x": 250,
        "y": 1040,
        "wires": [
            [
                "710d3950.694438"
            ]
        ]
    },
    {
        "id": "2673fdf9.3d31a2",
        "type": "comment",
        "z": "984823b1.a0823",
        "name": "plm tests 14.84.1c",
        "info": "",
        "x": 110,
        "y": 1380,
        "wires": []
    },
    {
        "id": "357d8636.7d764a",
        "type": "mqtt out",
        "z": "984823b1.a0823",
        "name": "",
        "topic": "",
        "qos": "",
        "retain": "",
        "broker": "971eda83.260398",
        "x": 610,
        "y": 1420,
        "wires": []
    },
    {
        "id": "7db9ffe3.f83",
        "type": "inject",
        "z": "984823b1.a0823",
        "name": "",
        "topic": "insteon/command/14.84.1c",
        "payload": "{ \"cmd\" : \"print_db\" }",
        "payloadType": "json",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "x": 150,
        "y": 1420,
        "wires": [
            [
                "357d8636.7d764a"
            ]
        ]
    },
    {
        "id": "d78acd49.3b0e",
        "type": "inject",
        "z": "984823b1.a0823",
        "name": "insteon/command/name { \"cmd\": \"on\", \"level\" : 175, \"instant\" : 1 }",
        "topic": "insteon/command/bsmt_officesmall_spare_lamplinc_18.93.3c",
        "payload": "{ \"cmd\": \"on\", \"level\" : 175, \"instant\" : 1 }",
        "payloadType": "json",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "x": 290,
        "y": 960,
        "wires": [
            [
                "710d3950.694438"
            ]
        ]
    },
    {
        "id": "740e8031.a398a",
        "type": "inject",
        "z": "984823b1.a0823",
        "name": "insteon/command/name { \"cmd\" : \"refresh\", \"force\" : true }",
        "topic": "insteon/command/bsmt_officesmall_spare_lamplinc_18.93.3c",
        "payload": "{ \"cmd\" : \"refresh\", \"force\" : true }",
        "payloadType": "json",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "x": 270,
        "y": 1080,
        "wires": [
            [
                "710d3950.694438"
            ]
        ]
    },
    {
        "id": "3153a0e9.678eb",
        "type": "inject",
        "z": "11aaf4c8.4bf33b",
        "name": "",
        "topic": "garage/status",
        "payload": "",
        "payloadType": "date",
        "repeat": "60",
        "crontab": "",
        "once": true,
        "onceDelay": "",
        "x": 150,
        "y": 100,
        "wires": [
            [
                "e9a8bd7c.6f65"
            ]
        ]
    },
    {
        "id": "e4163af7.d63848",
        "type": "http request",
        "z": "11aaf4c8.4bf33b",
        "name": "",
        "method": "POST",
        "ret": "obj",
        "url": "https://myqexternal.myqdevice.com/api/v4/User/Validate",
        "tls": "ccbad4df.c6e028",
        "x": 770,
        "y": 140,
        "wires": [
            [
                "795731b2.9f7f4"
            ]
        ]
    },
    {
        "id": "83a330e4.d7b2c",
        "type": "debug",
        "z": "11aaf4c8.4bf33b",
        "name": "",
        "active": false,
        "console": "false",
        "complete": "true",
        "x": 950,
        "y": 40,
        "wires": []
    },
    {
        "id": "289ed2ed.db4a8e",
        "type": "function",
        "z": "11aaf4c8.4bf33b",
        "name": "",
        "func": "msg.payload = {\n    \"username\" : context.flow.MyQ.payload.username,\n    \"password\" : context.flow.MyQ.payload.password\n}\n\nmsg.headers = {\n    ContentType : \"application/json\",\n    Accept : \"application/json\",\n    MyQApplicationId : \"Vj8pQggXLhLy0WHahglCD4N1nAkkXQtGYpq2HrHD7H1nvmbT55KqtN6RSF4ILB/i\",\n    Culture : \"en\"\n}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 630,
        "y": 140,
        "wires": [
            [
                "e4163af7.d63848"
            ]
        ]
    },
    {
        "id": "e9a8bd7c.6f65",
        "type": "function",
        "z": "11aaf4c8.4bf33b",
        "name": "",
        "func": "\nif(msg.payload && msg.payload.desired_state) {\n    msg.desired_state = msg.payload.desired_state;\n}\n\n\nmsg.payload = {};\n\nvar myq = global.get(\"myq\");\n\nif(myq && myq.SecurityToken) {\n    msg.payload.myq = myq; \n}\n\n\nreturn msg;\n",
        "outputs": "1",
        "noerr": 0,
        "x": 330,
        "y": 160,
        "wires": [
            [
                "d2ff0087.35e4d",
                "3514d096.e05a9",
                "f6bd898d.11bb78"
            ]
        ]
    },
    {
        "id": "ab1f61d1.f1759",
        "type": "debug",
        "z": "11aaf4c8.4bf33b",
        "name": "",
        "active": false,
        "console": "false",
        "complete": "true",
        "x": 670,
        "y": 60,
        "wires": []
    },
    {
        "id": "69bb7f4e.1b68e",
        "type": "debug",
        "z": "11aaf4c8.4bf33b",
        "name": "",
        "active": false,
        "console": "false",
        "complete": "true",
        "x": 610,
        "y": 180,
        "wires": []
    },
    {
        "id": "795731b2.9f7f4",
        "type": "function",
        "z": "11aaf4c8.4bf33b",
        "name": "",
        "func": "\nif(msg.statusCode == 200 && msg.payload.SecurityToken) {\n    var myq = {\n        SecurityToken : msg.payload.SecurityToken\n    };\n    \n    global.set(\"myq\", myq);\n    msg.payload.myq = myq;\n    return msg;\n} else {\n    return null;\n}\n\n\n",
        "outputs": 1,
        "noerr": 0,
        "x": 910,
        "y": 140,
        "wires": [
            [
                "83a330e4.d7b2c",
                "f6bd898d.11bb78"
            ]
        ]
    },
    {
        "id": "d2ff0087.35e4d",
        "type": "switch",
        "z": "11aaf4c8.4bf33b",
        "name": "",
        "property": "payload.myq",
        "propertyType": "msg",
        "rules": [
            {
                "t": "nnull"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "false",
        "outputs": 2,
        "x": 470,
        "y": 140,
        "wires": [
            [
                "ab1f61d1.f1759"
            ],
            [
                "289ed2ed.db4a8e",
                "69bb7f4e.1b68e"
            ]
        ]
    },
    {
        "id": "3514d096.e05a9",
        "type": "debug",
        "z": "11aaf4c8.4bf33b",
        "name": "",
        "active": false,
        "console": "false",
        "complete": "true",
        "x": 470,
        "y": 60,
        "wires": []
    },
    {
        "id": "f6bd898d.11bb78",
        "type": "function",
        "z": "11aaf4c8.4bf33b",
        "name": "",
        "func": "\nvar myq;\n\nif(msg.payload.myq) {\n    myq = msg.payload.myq;\n} else {\n    myq = global.get(\"myq\");\n}\n\nif(!myq) return msg;\n\n\n\n\nmsg.headers = {\n    ContentType : \"application/json\",\n    Accept : \"application/json\",\n    MyQApplicationId : \"Vj8pQggXLhLy0WHahglCD4N1nAkkXQtGYpq2HrHD7H1nvmbT55KqtN6RSF4ILB/i\",\n    Culture : \"en\",\n    SecurityToken : myq.SecurityToken\n}\n\n\nreturn msg;\n\n",
        "outputs": 1,
        "noerr": 0,
        "x": 390,
        "y": 260,
        "wires": [
            [
                "18d389f6.096626"
            ]
        ]
    },
    {
        "id": "a33d683b.523ae8",
        "type": "http request",
        "z": "11aaf4c8.4bf33b",
        "name": "",
        "method": "GET",
        "ret": "obj",
        "url": "https://myqexternal.myqdevice.com/api/v4/UserDeviceDetails/Get",
        "tls": "ccbad4df.c6e028",
        "x": 710,
        "y": 260,
        "wires": [
            [
                "7cb3ce78.23626",
                "d9892629.2348a8"
            ]
        ]
    },
    {
        "id": "5ae7f1a6.6f716",
        "type": "function",
        "z": "11aaf4c8.4bf33b",
        "name": "",
        "func": "var myq = global.get(\"myq\");\n\nmyq.devices = msg.payload.Devices;\nmyq.timestamp = new Date();\n\nglobal.set(\"myq\", myq);\n\nmsg.payload.myq = myq;\n\nvar state = \"unknown\";\nfor(var d in myq.devices) {\n    var device = myq.devices[d];\n    if(device && device.MyQDeviceTypeName && device.MyQDeviceTypeName == \"GarageDoorOpener\" && device.Attributes) {\n        myq.garage = device;\n        for(var a in device.Attributes) {\n            var attribute = device.Attributes[a];\n            if(attribute && attribute.AttributeDisplayName == \"doorstate\") {\n                var state = attribute.Value + \"\";\n                myq.garage.state = \"unknown\";\n                if(state == \"1\") myq.garage.state = \"open\";\n                if(state == \"2\") myq.garage.state = \"closed\";\n                if(state == \"3\") myq.garage.state = \"stopped\";\n                if(state == \"4\") myq.garage.state = \"opening\";\n                if(state == \"5\") myq.garage.state = \"closing\";\n                if(state == \"8\") myq.garage.state = \"moving\";\n                if(state == \"9\") myq.garage.state = \"open\";\n            }\n        }\n    }\n}\nif(msg.headers) delete msg.headers;\nif(msg.statusCode) delete msg.statusCode;\nif(msg.responseUrl) delete msg.responseUrl;\nif(msg.responseCookies) delete msg.responseCookies;\n\n\nmsg.payload = msg.payload.myq;\n\n\nvar last = global.get(\"myq_garage_last_known\")\nmsg.payload.garage.hasChanged = false;\nif(last && last != msg.payload.garage.state) {\n    msg.payload.garage.hasChanged = true;\n}\nglobal.set(\"myq_garage_last_known\", msg.payload.garage.state);\n\nvar msg2 = {};\nmsg2.payload=myq.garage.state;\nmsg2.topic=\"garage/status\";\nmsg2.timestamp=myq.timestamp;\n\nreturn [msg,msg2];\n",
        "outputs": 2,
        "noerr": 0,
        "x": 790,
        "y": 400,
        "wires": [
            [
                "3a9461a7.cd4a4e",
                "bf6423aa.2e9ed"
            ],
            [
                "6cfbef80.77ca7"
            ]
        ]
    },
    {
        "id": "7cb3ce78.23626",
        "type": "debug",
        "z": "11aaf4c8.4bf33b",
        "name": "",
        "active": false,
        "console": "false",
        "complete": "true",
        "x": 950,
        "y": 280,
        "wires": []
    },
    {
        "id": "fce1223e.d0e64",
        "type": "switch",
        "z": "11aaf4c8.4bf33b",
        "name": "",
        "property": "payload.error",
        "propertyType": "msg",
        "rules": [
            {
                "t": "nnull"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "false",
        "outputs": 2,
        "x": 670,
        "y": 380,
        "wires": [
            [
                "c9319d60.746e"
            ],
            [
                "5ae7f1a6.6f716"
            ]
        ]
    },
    {
        "id": "c9319d60.746e",
        "type": "function",
        "z": "11aaf4c8.4bf33b",
        "name": "",
        "func": "\nreturn { _msgid : msg._msgid }\n",
        "outputs": 1,
        "noerr": 0,
        "x": 950,
        "y": 240,
        "wires": [
            [
                "289ed2ed.db4a8e"
            ]
        ]
    },
    {
        "id": "d9892629.2348a8",
        "type": "function",
        "z": "11aaf4c8.4bf33b",
        "name": "",
        "func": "\n\nif(msg.payload.ErrorMessage && msg.payload.ErrorMessage !== \"\") {\n    msg.payload.error = msg.payload.ErrorMessage;\n}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 690,
        "y": 320,
        "wires": [
            [
                "fce1223e.d0e64"
            ]
        ]
    },
    {
        "id": "3a9461a7.cd4a4e",
        "type": "debug",
        "z": "11aaf4c8.4bf33b",
        "name": "",
        "active": false,
        "console": "false",
        "complete": "true",
        "x": 950,
        "y": 320,
        "wires": []
    },
    {
        "id": "5fd32ffd.682c7",
        "type": "comment",
        "z": "11aaf4c8.4bf33b",
        "name": "",
        "info": "https://github.com/jbnunn/Alexa-MyQGarage/blob/master/myq.py",
        "x": 70,
        "y": 240,
        "wires": []
    },
    {
        "id": "98be8b03.f31b88",
        "type": "inject",
        "z": "11aaf4c8.4bf33b",
        "name": "",
        "topic": "garage/status",
        "payload": "",
        "payloadType": "date",
        "repeat": "",
        "crontab": "",
        "once": false,
        "x": 150,
        "y": 60,
        "wires": [
            [
                "e9a8bd7c.6f65"
            ]
        ]
    },
    {
        "id": "d2c06ea.98c9f9",
        "type": "mqtt out",
        "z": "11aaf4c8.4bf33b",
        "name": "",
        "topic": "garage",
        "qos": "",
        "retain": "false",
        "broker": "971eda83.260398",
        "x": 960,
        "y": 340,
        "wires": []
    },
    {
        "id": "bf6423aa.2e9ed",
        "type": "switch",
        "z": "11aaf4c8.4bf33b",
        "name": "",
        "property": "payload.garage.hasChanged",
        "propertyType": "msg",
        "rules": [
            {
                "t": "true"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "false",
        "outputs": 2,
        "x": 790,
        "y": 460,
        "wires": [
            [
                "e266609d.8b1a2",
                "875f97b1.d74f58"
            ],
            [
                "c0857b3c.74c4b8"
            ]
        ]
    },
    {
        "id": "e266609d.8b1a2",
        "type": "debug",
        "z": "11aaf4c8.4bf33b",
        "name": "",
        "active": false,
        "console": "false",
        "complete": "true",
        "x": 850,
        "y": 540,
        "wires": []
    },
    {
        "id": "c0857b3c.74c4b8",
        "type": "debug",
        "z": "11aaf4c8.4bf33b",
        "name": "",
        "active": false,
        "console": "false",
        "complete": "true",
        "x": 850,
        "y": 600,
        "wires": []
    },
    {
        "id": "875f97b1.d74f58",
        "type": "function",
        "z": "11aaf4c8.4bf33b",
        "name": "",
        "func": "\nmsg.payload = \"Garage door is \" + msg.payload.garage.state + \" at \" + msg.payload.timestamp;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 930,
        "y": 500,
        "wires": [
            [
                "b1885fd7.f94e7"
            ]
        ]
    },
    {
        "id": "91b5387.32c7fc8",
        "type": "inject",
        "z": "11aaf4c8.4bf33b",
        "name": "Close",
        "topic": "garage/control",
        "payload": "{\"desired_state\":\"close\"}",
        "payloadType": "json",
        "repeat": "",
        "crontab": "",
        "once": false,
        "x": 90,
        "y": 420,
        "wires": [
            [
                "e9a8bd7c.6f65"
            ]
        ]
    },
    {
        "id": "533b9e9f.65d36",
        "type": "debug",
        "z": "11aaf4c8.4bf33b",
        "name": "",
        "active": false,
        "console": "false",
        "complete": "true",
        "x": 430,
        "y": 500,
        "wires": []
    },
    {
        "id": "fc3c8fdf.51006",
        "type": "http request",
        "z": "11aaf4c8.4bf33b",
        "name": "",
        "method": "PUT",
        "ret": "obj",
        "url": "https://myqexternal.myqdevice.com/api/v4/DeviceAttribute/PutDeviceAttribute",
        "tls": "ccbad4df.c6e028",
        "x": 475,
        "y": 432,
        "wires": [
            [
                "8744e4ff.0ca488",
                "28318240.e66bfe"
            ]
        ]
    },
    {
        "id": "f8b0bc9.b5bf34",
        "type": "function",
        "z": "11aaf4c8.4bf33b",
        "name": "",
        "func": "var myq;\n\nif(msg.payload.myq) {\n    myq = msg.payload.myq;\n} else {\n    myq = global.get(\"myq\");\n}\nvar open_close_state = 0; \nif (msg.desired_state && msg.desired_state == \"open\") open_close_state = 1;\n\nmsg.payload = {\n            \"attributeName\": \"desireddoorstate\",\n            \"myQDeviceId\": myq.garage.MyQDeviceId,\n            \"AttributeValue\": open_close_state\n        }\n\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 315,
        "y": 412,
        "wires": [
            [
                "533b9e9f.65d36",
                "fc3c8fdf.51006"
            ]
        ]
    },
    {
        "id": "18d389f6.096626",
        "type": "switch",
        "z": "11aaf4c8.4bf33b",
        "name": "",
        "property": "topic",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "garage/control",
                "vt": "str"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "false",
        "repair": false,
        "outputs": 2,
        "x": 430,
        "y": 320,
        "wires": [
            [
                "f8b0bc9.b5bf34"
            ],
            [
                "a33d683b.523ae8",
                "ae758271.b8f4b"
            ]
        ]
    },
    {
        "id": "8744e4ff.0ca488",
        "type": "debug",
        "z": "11aaf4c8.4bf33b",
        "name": "",
        "active": false,
        "console": "false",
        "complete": "true",
        "x": 635,
        "y": 452,
        "wires": []
    },
    {
        "id": "8bc9083d.c97bd8",
        "type": "inject",
        "z": "11aaf4c8.4bf33b",
        "name": "Open",
        "topic": "garage/control",
        "payload": "{\"desired_state\":\"open\"}",
        "payloadType": "json",
        "repeat": "",
        "crontab": "",
        "once": false,
        "x": 90,
        "y": 460,
        "wires": [
            [
                "e9a8bd7c.6f65"
            ]
        ]
    },
    {
        "id": "28318240.e66bfe",
        "type": "mqtt out",
        "z": "11aaf4c8.4bf33b",
        "name": "",
        "topic": "garage/control/state",
        "qos": "",
        "retain": "false",
        "broker": "971eda83.260398",
        "x": 640,
        "y": 500,
        "wires": []
    },
    {
        "id": "2b0d0b6a.cdf6e4",
        "type": "mqtt in",
        "z": "11aaf4c8.4bf33b",
        "name": "",
        "topic": "garage/control",
        "qos": "2",
        "broker": "971eda83.260398",
        "x": 89.5,
        "y": 510,
        "wires": [
            [
                "e9a8bd7c.6f65"
            ]
        ]
    },
    {
        "id": "b4a7829f.2ac4b",
        "type": "mqtt in",
        "z": "11aaf4c8.4bf33b",
        "name": "",
        "topic": "garage/status",
        "qos": "2",
        "broker": "971eda83.260398",
        "x": 90,
        "y": 140,
        "wires": [
            [
                "e9a8bd7c.6f65"
            ]
        ]
    },
    {
        "id": "b4e4efa6.25575",
        "type": "comment",
        "z": "11aaf4c8.4bf33b",
        "name": "jeff note",
        "info": "copied from:\nhttps://flows.nodered.org/flow/83f263d6f5f23e53e2aed85b96aadb3e\nhttps://gist.github.com/nothingmn/83f263d6f5f23e53e2aed85b96aadb3e\n",
        "x": 50,
        "y": 20,
        "wires": []
    },
    {
        "id": "1fd531c0.17773e",
        "type": "mqtt in",
        "z": "984823b1.a0823",
        "name": "",
        "topic": "insteon/flr1_powderroom_fan/state",
        "qos": "1",
        "broker": "971eda83.260398",
        "x": 160,
        "y": 120,
        "wires": [
            [
                "98d61f79.ad53f"
            ]
        ]
    },
    {
        "id": "e6a1bd12.ffac1",
        "type": "inject",
        "z": "984823b1.a0823",
        "name": "Initialize global",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "x": 140,
        "y": 860,
        "wires": [
            [
                "b4f329cb.60c288"
            ]
        ]
    },
    {
        "id": "b4f329cb.60c288",
        "type": "function",
        "z": "984823b1.a0823",
        "name": "Initialize global",
        "func": "var insteonIDLookup = {\n    \"06.21.97\": \"audiosystempower_basement_officebig\",\n\"1f.79.74\": \"dummy_foyer_chandelier\",\n\"1f.05.ab\": \"dummy_kitchen_ceiling\",\n\"1f.6b.12\": \"dummy_laundry\",\n\"16.4b.6e\": \"dummy_upstairs_hall_topofstairs\",\n\"1f.7f.83\": \"dummy_upstairshalldummy_bottomofstairs\",\n\"01.dd.b3\": \"ezio6i\",\n\"1b.8c.3b\": \"fan_powderroom\",\n\"20.8e.27\": \"garbagedisposal_kitchen\",\n\"31.29.fe\": \"hub1\",\n\"3b.56.2b\": \"hub2\",\n\"15.c7.c0\": \"keypad_bedroom_master_portable\",\n\"22.14.74\": \"keypad_kitchen\",\n\"1f.70.ee\": \"dummy_livingroom\",\n\"16.d7.88\": \"lights_appliancelinc16d788\",\n\"16.d7.f1\": \"lights_appliancelinc16d7f1\",\n\"22.15.47\": \"lights_basement_hall\",\n\"15.61.ac\": \"lights_basement_officebig\",\n\"15.64.d3\": \"lights_basement_officesmall\",\n\"1f.73.3e\": \"lights_basement_receast\",\n\"1f.6d.c1\": \"lights_basement_recwest\",\n\"15.64.97\": \"lights_basement_stairs\",\n\"1a.f6.af\": \"lights_basement_workshop\",\n\"09.55.7a\": \"lights_bedroom_guest\",\n\"1f.7c.43\": \"lights_bedroom_master_bath_dome\",\n\"20.33.90\": \"lights_bedroom_master_closetjeff\",\n\"20.34.1f\": \"lights_bedroom_master_closetkathy\",\n\"1f.02.3c\": \"lights_bedroom_master_lamps\",\n\"16.93.71\": \"lights_bedroom_master_vanity\",\n\"1f.80.d2\": \"lights_diningroom\",\n\"16.49.cf\": \"lights_familyroom\",\n\"1f.7f.02\": \"lights_foyer_chandelier\",\n\"1f.70.7c\": \"lights_foyer_vestible\",\n\"20.90.11\": \"lights_garage_ceiling\",\n\"22.15.e5\": \"lights_upstairs_bath\",\n\"1f.04.ec\": \"lights_kitchen_ceiling\",\n\"1f.6a.e0\": \"lights_kitchen_counters\",\n\"1f.6d.12\": \"lights_kitchen_dinette\",\n\"1f.03.e0\": \"lights_kitchen_island\",\n\"1f.81.6b\": \"lights_kitchen_sinkbay\",\n\"18.93.3c\": \"lights_lamplinc18933c\",\n\"3a.87.4c\": \"lights_lamplinc3a874c\",\n\"3a.8a.4f\": \"lights_lamplinc3a8a4f\",\n\"1f.6c.54\": \"lights_laundry\",\n\"14.43.cc\": \"lights_livingroom_couch\",\n\"14.41.6b\": \"lights_livingroom_curio\",\n\"14.41.84\": \"lights_livingroom_window\",\n\"16.93.50\": \"lights_outside_back_deck\",\n\"19.22.60\": \"lights_outside_back_west\",\n\"42.ae.f4\": \"lights_outside_front\",\n\"16.da.c3\": \"lights_outside_malibu\",\n\"1f.80.29\": \"lights_powderroom\",\n\"16.4b.8d\": \"lights_upstairs_hall\",\n\"1b.97.b8\": \"lightsandfan_bedroom_master_bath\",\n\"1c.33.6f\": \"miniremote\",\n\"14.11.84\": \"motion_basement_workshop\",\n\"37.bd.98\": \"motion_kitchen\",\n\"13.fd.44\": \"outdoor13fd44\",\n\"13.fe.5a\": \"outdoor13fe5a\",\n\"14.02.2e\": \"outdoor14022e\",\n\"32.2a.0f\": \"outdoor322a0f\",\n\"32.2d.fd\": \"outdoor322dfd\",\n\"14.a0.03\": \"spare14a003\",\n\"16.72.03\": \"spare167203\",\n\"16.92.d1\": \"spare2\",\n\"20.87.1a\": \"spare20871a\",\n\"3f.4a.5a\": \"sparewaskyleclgfan\",\n\"39.99.c8\": \"sparewaskylekeypad\",\n\"\":\"null\"}\nmsg.payload = insteonIDLookup;\ncontext.global.insteonIDLookup = insteonIDLookup;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 320,
        "y": 860,
        "wires": [
            []
        ]
    },
    {
        "id": "f084466e.5d61b8",
        "type": "inject",
        "z": "984823b1.a0823",
        "name": "PowerRoomFastOnOff",
        "topic": "insteon/flr1_powderroom_fan/state",
        "payload": "ON",
        "payloadType": "str",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "x": 140,
        "y": 180,
        "wires": [
            []
        ]
    },
    {
        "id": "c5f1953a.314208",
        "type": "function",
        "z": "984823b1.a0823",
        "name": "parse to ON/OFF",
        "func": "msg.payload=JSON.parse(msg.payload);\nmsg.payload=msg.payload.state;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 510,
        "y": 700,
        "wires": [
            [
                "7502f25.a3ec60c"
            ]
        ]
    },
    {
        "id": "fdae57d7.f2d898",
        "type": "function",
        "z": "984823b1.a0823",
        "name": "parse dimmer",
        "func": "msg.payload=JSON.parse(msg.payload);\nmsg.payload=msg.payload.state;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 440,
        "y": 60,
        "wires": [
            [
                "97c86336.23be6"
            ]
        ]
    },
    {
        "id": "2c54d816.9b6ae8",
        "type": "rbe",
        "z": "984823b1.a0823",
        "name": "",
        "func": "rbe",
        "gap": "",
        "start": "",
        "inout": "out",
        "x": 310,
        "y": 60,
        "wires": [
            [
                "fdae57d7.f2d898"
            ]
        ]
    },
    {
        "id": "98d61f79.ad53f",
        "type": "rbe",
        "z": "984823b1.a0823",
        "name": "",
        "func": "rbe",
        "gap": "",
        "start": "",
        "inout": "out",
        "x": 350,
        "y": 120,
        "wires": [
            [
                "284b6a26.2a1196"
            ]
        ]
    },
    {
        "id": "5d6b642d.dc6f4c",
        "type": "mqtt out",
        "z": "984823b1.a0823",
        "name": "",
        "topic": "insteon/flr1_powderroom_fan/set",
        "qos": "1",
        "retain": "true",
        "broker": "971eda83.260398",
        "x": 860,
        "y": 180,
        "wires": []
    },
    {
        "id": "e454fb33.9a59f8",
        "type": "delay",
        "z": "984823b1.a0823",
        "name": "",
        "pauseType": "queue",
        "timeout": "5",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": true,
        "x": 210,
        "y": 640,
        "wires": [
            [
                "bb0b2c50.7562e"
            ]
        ]
    },
    {
        "id": "f48ad297.a8132",
        "type": "rbe",
        "z": "88396424.c54498",
        "name": "debug deadband",
        "func": "deadband",
        "gap": "0.1",
        "start": "",
        "inout": "out",
        "property": "payload",
        "x": 690,
        "y": 120,
        "wires": [
            [
                "d07c6ad.e3c7298"
            ]
        ]
    },
    {
        "id": "d883200.6217ae",
        "type": "trigger",
        "z": "984823b1.a0823",
        "op1": "",
        "op2": "{\"payload\":\"OFF\"}",
        "op1type": "nul",
        "op2type": "json",
        "duration": "10",
        "extend": true,
        "units": "min",
        "reset": "CANCEL",
        "bytopic": "all",
        "name": "",
        "x": 650,
        "y": 280,
        "wires": [
            [
                "10a2184c.d4f048"
            ]
        ]
    },
    {
        "id": "10a2184c.d4f048",
        "type": "function",
        "z": "984823b1.a0823",
        "name": "send OFF",
        "func": "msg.payload=\"OFF\"\nreturn msg;\n\n/*\nswitch (msg.payload)\n{\n    case 0:\n    case \"0\":\n    case false:\n    case \"false\":\n    case \"FALSE\":\n    case \"off\":\n    case \"OFF\":\n        msg.payload = \"OFF\";\n        break;\n    case 1:\n    case \"1\":\n    case true:\n    case \"true\":\n    case \"TRUE\":\n    case \"on\":\n    case \"ON\":\n        msg.payload = \"ON\";\n        break;\n        \n    default:\n        break;\n}\nreturn msg;\n*/\n\n",
        "outputs": 1,
        "noerr": 0,
        "x": 780,
        "y": 280,
        "wires": [
            [
                "52cb2a5a.ea7634",
                "f70a39ef.e5f2f8"
            ]
        ]
    },
    {
        "id": "a8bcdca7.3815",
        "type": "function",
        "z": "984823b1.a0823",
        "name": "CANCEL if  OFF",
        "func": "switch (msg.payload)\n{\n    case 0:\n    case \"0\":\n    case false:\n    case \"false\":\n    case \"FALSE\":\n    case \"off\":\n    case \"OFF\":\n        msg.payload = \"CANCEL\";\n        break;\n/*\n    case 1:\n    case \"1\":\n    case true:\n    case \"true\":\n    case \"TRUE\":\n    case \"on\":\n    case \"ON\":\n        msg.payload = \"ON\";\n        break;\n*/        \n    default:\n        msg=null;\n        break;\n}\nreturn msg;\n\n\n/*\nswitch (msg.payload)\n{\n    case 0:\n    case \"0\":\n    case false:\n    case \"false\":\n    case \"FALSE\":\n    case \"off\":\n    case \"OFF\":\n        msg.payload = \"OFF\";\n        break;\n    case 1:\n    case \"1\":\n    case true:\n    case \"true\":\n    case \"TRUE\":\n    case \"on\":\n    case \"ON\":\n        msg.payload = \"ON\";\n        break;\n        \n    default:\n        break;\n}\nreturn msg;\n*/\n\n",
        "outputs": 1,
        "noerr": 0,
        "x": 480,
        "y": 280,
        "wires": [
            [
                "d883200.6217ae"
            ]
        ]
    },
    {
        "id": "acfab7d6.73bea8",
        "type": "mqtt in",
        "z": "984823b1.a0823",
        "name": "",
        "topic": "insteon/flr2_masterbath_vanity/state",
        "qos": "1",
        "broker": "971eda83.260398",
        "x": 160,
        "y": 280,
        "wires": [
            [
                "f93f9127.237d4",
                "a8bcdca7.3815"
            ]
        ]
    },
    {
        "id": "52cb2a5a.ea7634",
        "type": "mqtt out",
        "z": "984823b1.a0823",
        "name": "",
        "topic": "insteon/flr2_masterbath_vanity/set",
        "qos": "1",
        "retain": "true",
        "broker": "971eda83.260398",
        "x": 860,
        "y": 240,
        "wires": []
    },
    {
        "id": "f93f9127.237d4",
        "type": "function",
        "z": "984823b1.a0823",
        "name": "pass on ON",
        "func": "switch (msg.payload)\n{\n/*\ncase 0:\n    case \"0\":\n    case false:\n    case \"false\":\n    case \"FALSE\":\n    case \"off\":\n    case \"OFF\":\n        msg.payload = \"CANCEL\";\n        break;\n*/\n    case 1:\n    case \"1\":\n    case true:\n    case \"true\":\n    case \"TRUE\":\n    case \"on\":\n    case \"ON\":\n        msg.payload = \"ON\";\n        break;\n\n    default:\n        msg=null;\n        break;\n}\nreturn msg;\n\n\n/*\nswitch (msg.payload)\n{\n    case 0:\n    case \"0\":\n    case false:\n    case \"false\":\n    case \"FALSE\":\n    case \"off\":\n    case \"OFF\":\n        msg.payload = \"OFF\";\n        break;\n    case 1:\n    case \"1\":\n    case true:\n    case \"true\":\n    case \"TRUE\":\n    case \"on\":\n    case \"ON\":\n        msg.payload = \"ON\";\n        break;\n        \n    default:\n        break;\n}\nreturn msg;\n*/\n\n",
        "outputs": 1,
        "noerr": 0,
        "x": 470,
        "y": 240,
        "wires": [
            [
                "d883200.6217ae"
            ]
        ]
    },
    {
        "id": "4176eaef.dc79a4",
        "type": "comment",
        "z": "984823b1.a0823",
        "name": "experimental testing:",
        "info": "",
        "x": 90,
        "y": 780,
        "wires": []
    },
    {
        "id": "33771f21.5a029",
        "type": "comment",
        "z": "984823b1.a0823",
        "name": "troubleshooting tools:",
        "info": "",
        "x": 120,
        "y": 600,
        "wires": []
    },
    {
        "id": "e433b36.4c7325",
        "type": "comment",
        "z": "984823b1.a0823",
        "name": "possibly use global/flow context for name/insteon id lookup table",
        "info": "",
        "x": 250,
        "y": 820,
        "wires": []
    },
    {
        "id": "a490626c.abf6a",
        "type": "mqtt in",
        "z": "984823b1.a0823",
        "name": "",
        "topic": "insteon/flr2_bath2/state/1",
        "qos": "2",
        "broker": "971eda83.260398",
        "x": 130,
        "y": 340,
        "wires": [
            [
                "f5a11d90.6ccff"
            ]
        ]
    },
    {
        "id": "e10c08e.dcd2ef8",
        "type": "function",
        "z": "984823b1.a0823",
        "name": "parse ON/OFF",
        "func": "msg.payload=JSON.parse(msg.payload);\nmsg.payload=msg.payload.state;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 400,
        "y": 320,
        "wires": [
            [
                "f94896ba.660248",
                "19360f6a.58a911"
            ]
        ]
    },
    {
        "id": "ff8110b3.5b0e",
        "type": "trigger",
        "z": "984823b1.a0823",
        "op1": "",
        "op2": "{\"payload\":\"OFF\"}",
        "op1type": "nul",
        "op2type": "json",
        "duration": "10",
        "extend": true,
        "units": "min",
        "reset": "CANCEL",
        "bytopic": "all",
        "name": "",
        "x": 170,
        "y": 380,
        "wires": [
            [
                "836ef305.618c4"
            ]
        ]
    },
    {
        "id": "836ef305.618c4",
        "type": "function",
        "z": "984823b1.a0823",
        "name": "send OFF",
        "func": "msg.payload=\"OFF\"\nreturn msg;\n\n/*\nswitch (msg.payload)\n{\n    case 0:\n    case \"0\":\n    case false:\n    case \"false\":\n    case \"FALSE\":\n    case \"off\":\n    case \"OFF\":\n        msg.payload = \"OFF\";\n        break;\n    case 1:\n    case \"1\":\n    case true:\n    case \"true\":\n    case \"TRUE\":\n    case \"on\":\n    case \"ON\":\n        msg.payload = \"ON\";\n        break;\n        \n    default:\n        break;\n}\nreturn msg;\n*/\n\n",
        "outputs": 1,
        "noerr": 0,
        "x": 300,
        "y": 380,
        "wires": [
            [
                "d3cafade.95b7a8"
            ]
        ]
    },
    {
        "id": "19360f6a.58a911",
        "type": "function",
        "z": "984823b1.a0823",
        "name": "CANCEL if  OFF",
        "func": "switch (msg.payload)\n{\n    case 0:\n    case \"0\":\n    case false:\n    case \"false\":\n    case \"FALSE\":\n    case \"off\":\n    case \"OFF\":\n        msg.payload = \"CANCEL\";\n        break;\n/*\n    case 1:\n    case \"1\":\n    case true:\n    case \"true\":\n    case \"TRUE\":\n    case \"on\":\n    case \"ON\":\n        msg.payload = \"ON\";\n        break;\n*/        \n    default:\n        msg=null;\n        break;\n}\nreturn msg;\n\n\n/*\nswitch (msg.payload)\n{\n    case 0:\n    case \"0\":\n    case false:\n    case \"false\":\n    case \"FALSE\":\n    case \"off\":\n    case \"OFF\":\n        msg.payload = \"OFF\";\n        break;\n    case 1:\n    case \"1\":\n    case true:\n    case \"true\":\n    case \"TRUE\":\n    case \"on\":\n    case \"ON\":\n        msg.payload = \"ON\";\n        break;\n        \n    default:\n        break;\n}\nreturn msg;\n*/\n\n",
        "outputs": 1,
        "noerr": 0,
        "x": 660,
        "y": 360,
        "wires": [
            [
                "ff8110b3.5b0e"
            ]
        ]
    },
    {
        "id": "f94896ba.660248",
        "type": "function",
        "z": "984823b1.a0823",
        "name": "pass on if ON",
        "func": "switch (msg.payload)\n{\n/*\ncase 0:\n    case \"0\":\n    case false:\n    case \"false\":\n    case \"FALSE\":\n    case \"off\":\n    case \"OFF\":\n        msg.payload = \"CANCEL\";\n        break;\n*/\n    case 1:\n    case \"1\":\n    case true:\n    case \"true\":\n    case \"TRUE\":\n    case \"on\":\n    case \"ON\":\n        msg.payload = \"ON\";\n        break;\n\n    default:\n        msg=null;\n        break;\n}\nreturn msg;\n\n\n/*\nswitch (msg.payload)\n{\n    case 0:\n    case \"0\":\n    case false:\n    case \"false\":\n    case \"FALSE\":\n    case \"off\":\n    case \"OFF\":\n        msg.payload = \"OFF\";\n        break;\n    case 1:\n    case \"1\":\n    case true:\n    case \"true\":\n    case \"TRUE\":\n    case \"on\":\n    case \"ON\":\n        msg.payload = \"ON\";\n        break;\n        \n    default:\n        break;\n}\nreturn msg;\n*/\n\n",
        "outputs": 1,
        "noerr": 0,
        "x": 660,
        "y": 320,
        "wires": [
            [
                "ff8110b3.5b0e"
            ]
        ]
    },
    {
        "id": "3f300d40.eb63d2",
        "type": "mqtt out",
        "z": "984823b1.a0823",
        "name": "",
        "topic": "insteon/flr2_bath2/set/1",
        "qos": "1",
        "retain": "true",
        "broker": "971eda83.260398",
        "x": 910,
        "y": 380,
        "wires": []
    },
    {
        "id": "d3cafade.95b7a8",
        "type": "function",
        "z": "984823b1.a0823",
        "name": "stringify ON/OFF",
        "func": "msg.payload=msg.payload.state;\nmsg.payload=JSON.stringify(msg.payload);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 470,
        "y": 380,
        "wires": [
            [
                "3f300d40.eb63d2"
            ]
        ]
    },
    {
        "id": "4a533371.e09e7c",
        "type": "inject",
        "z": "984823b1.a0823",
        "name": "*NO* name/set { \"cmd\": \"OFF\", \"level\" : 0, \"instant\" : 1 }",
        "topic": "insteon/bsmt_officesmall_spare_lamplinc_18.93.3c/set",
        "payload": "{ \"cmd\": \"OFF\", \"level\" : 0, \"instant\" : 1 }",
        "payloadType": "json",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "x": 940,
        "y": 960,
        "wires": [
            [
                "710d3950.694438"
            ]
        ]
    },
    {
        "id": "8a58e415.a34b38",
        "type": "mqtt in",
        "z": "984823b1.a0823",
        "name": "office small lamplinc 18.93.3c",
        "topic": "insteon/bsmt_officesmall_spare_lamplinc_18.93.3c/state",
        "qos": "2",
        "broker": "971eda83.260398",
        "x": 140,
        "y": 440,
        "wires": [
            [
                "61553f8d.492ec"
            ]
        ]
    },
    {
        "id": "7358c9d3.4ae388",
        "type": "mqtt out",
        "z": "984823b1.a0823",
        "name": "",
        "topic": "insteon/bsmt_officesmall_spare_lamplinc_18.93.3c/set",
        "qos": "1",
        "retain": "true",
        "broker": "971eda83.260398",
        "x": 1000,
        "y": 480,
        "wires": []
    },
    {
        "id": "9d4dd675.8704d8",
        "type": "comment",
        "z": "984823b1.a0823",
        "name": "notes on insteon/command/{device} vs insteon/{device}/set",
        "info": "it appears you can set a dimmer device, for example\nusing either:\n msg.topic = 'insteon/command/{device}''\n msg.payload = '{ \"cmd\": \"on\", \"level\" : 175, \"instant\" : 1 }''\n\nor:\n msg.topic = 'insteon/{device}/set'\n msg.payload = { \"cmd\": \"on\" }\n\nor:\n msg.topic = 'insteon/{device}/level'\n msg.payload = '{ \"cmd\": \"on\"[,\"level\" : 175] }'\n ([]-optional)\n \n I'm unclear which of the 3 might be best.\n ",
        "x": 670,
        "y": 860,
        "wires": []
    },
    {
        "id": "9b6ae8ac.05f6e8",
        "type": "inject",
        "z": "984823b1.a0823",
        "name": "",
        "topic": "insteon/{device}/set",
        "payload": "",
        "payloadType": "date",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "x": 100,
        "y": 560,
        "wires": [
            [
                "fe37c1ff.2d225"
            ]
        ]
    },
    {
        "id": "fe37c1ff.2d225",
        "type": "function",
        "z": "984823b1.a0823",
        "name": "stringify ON/OFF for dimmer",
        "func": "/*\n//get down to just the device\nmsg.topic = msg.topic.substring(msg.topic.search(\"/\")+1,msg.topic.length);\nmsg.topic = msg.topic.substring(0,msg.topic.search(\"/\"));\n*/\n\n//replace incoming topic /state with /set\n//node.error(\"Hi mom! device equals \"+ device);\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 460,
        "y": 560,
        "wires": [
            [
                "ac6b2d4c.ea248"
            ]
        ]
    },
    {
        "id": "ac6b2d4c.ea248",
        "type": "debug",
        "z": "984823b1.a0823",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "x": 860,
        "y": 560,
        "wires": []
    },
    {
        "id": "d31e62c8.71333",
        "type": "inject",
        "z": "984823b1.a0823",
        "name": "*NO* name/level { \"cmd\": \"OFF\", \"level\" : 0, \"instant\" : 1 }",
        "topic": "insteon/bsmt_officesmall_spare_lamplinc_18.93.3c/level",
        "payload": "{ \"cmd\": \"OFF\", \"level\" : 0, \"instant\" : 1 }",
        "payloadType": "json",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "x": 950,
        "y": 1000,
        "wires": [
            [
                "710d3950.694438"
            ]
        ]
    },
    {
        "id": "f6e792ad.f6d2b",
        "type": "inject",
        "z": "984823b1.a0823",
        "name": "/level \"OFF\"",
        "topic": "insteon/bsmt_officesmall_spare_lamplinc_18.93.3c/level",
        "payload": "\"OFF\"",
        "payloadType": "json",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "x": 810,
        "y": 1040,
        "wires": [
            [
                "710d3950.694438"
            ]
        ]
    },
    {
        "id": "e57e3486.499ed8",
        "type": "inject",
        "z": "984823b1.a0823",
        "name": "insteon/name/set \"OFF\"",
        "topic": "insteon/bsmt_officesmall_spare_lamplinc_18.93.3c/set",
        "payload": "\"OFF\"",
        "payloadType": "json",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "x": 160,
        "y": 1240,
        "wires": [
            [
                "710d3950.694438"
            ]
        ]
    },
    {
        "id": "1d12dca3.a5bb53",
        "type": "inject",
        "z": "984823b1.a0823",
        "name": "insteon/name/set {\"cmd\":\"OFF\"}",
        "topic": "insteon/bsmt_officesmall_spare_lamplinc_18.93.3c/level",
        "payload": "{\"cmd\":\"OFF\"}",
        "payloadType": "json",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "x": 190,
        "y": 1280,
        "wires": [
            [
                "710d3950.694438"
            ]
        ]
    },
    {
        "id": "f9a7d47a.67f878",
        "type": "inject",
        "z": "984823b1.a0823",
        "name": "name/level { \"state\": \"off\", \"level\" : 0, \"instant\" : 1 }",
        "topic": "insteon/bsmt_officesmall_spare_lamplinc_18.93.3c/level",
        "payload": "{ \"state\": \"off\", \"level\" : 0, \"instant\" : 1 }",
        "payloadType": "json",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "x": 240,
        "y": 1200,
        "wires": [
            [
                "710d3950.694438"
            ]
        ]
    },
    {
        "id": "e754ebf4.b86908",
        "type": "inject",
        "z": "984823b1.a0823",
        "name": "name/level { \"state\": \"on\", \"level\" : 175, \"instant\" : 1 }",
        "topic": "insteon/bsmt_officesmall_spare_lamplinc_18.93.3c/level",
        "payload": "{ \"state\": \"on\", \"level\" : 175, \"instant\" : 1 }",
        "payloadType": "json",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "x": 250,
        "y": 1160,
        "wires": [
            [
                "710d3950.694438"
            ]
        ]
    },
    {
        "id": "1b5eeda1.c2a742",
        "type": "inject",
        "z": "984823b1.a0823",
        "name": "name/level { \"state\": \"on\", \"brightness\" : 175, \"instant\" : 1 }",
        "topic": "insteon/bsmt_officesmall_spare_lamplinc_18.93.3c/level",
        "payload": "{ \"state\": \"on\", \"brightness\" : 175, \"instant\" : 1 }",
        "payloadType": "json",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "x": 270,
        "y": 1120,
        "wires": [
            [
                "710d3950.694438"
            ]
        ]
    },
    {
        "id": "23d003dc.6b198c",
        "type": "comment",
        "z": "984823b1.a0823",
        "name": "THESE WORK",
        "info": "",
        "x": 300,
        "y": 920,
        "wires": []
    },
    {
        "id": "410eb48a.03becc",
        "type": "comment",
        "z": "984823b1.a0823",
        "name": "THESE DO NOT WORK",
        "info": "",
        "x": 890,
        "y": 920,
        "wires": []
    },
    {
        "id": "fbac0c39.6c15",
        "type": "subflow:eef3db45.68d418",
        "z": "984823b1.a0823",
        "name": "",
        "x": 970,
        "y": 440,
        "wires": []
    },
    {
        "id": "f5a11d90.6ccff",
        "type": "subflow:eef3db45.68d418",
        "z": "984823b1.a0823",
        "name": "",
        "x": 970,
        "y": 340,
        "wires": []
    },
    {
        "id": "1e2225d8.cdc36a",
        "type": "comment",
        "z": "984823b1.a0823",
        "name": "programming notes",
        "info": "\n/*\nswitch (msg.payload)\n{\n    case 0:\n    case \"0\":\n    case false:\n    case \"false\":\n    case \"FALSE\":\n    case \"off\":\n    case \"OFF\":\n        msg.payload = \"OFF\";\n        break;\n    case 1:\n    case \"1\":\n    case true:\n    case \"true\":\n    case \"TRUE\":\n    case \"on\":\n    case \"ON\":\n        msg.payload = \"ON\";\n        break;\n        \n    default:\n        break;\n}\nreturn msg;\n*/\n\n\n\n//msg.payload=JSON.stringify(msg.payload);\n\n/*\n//get down to just the device\nmsg.topic = msg.topic.substring(msg.topic.search(\"/\")+1,msg.topic.length);\nmsg.topic = msg.topic.substring(0,msg.topic.search(\"/\"));\n*/\n\n//replace incoming topic /state with /set\n//node.error(\"Hi mom! device equals \"+ device);\n\n",
        "x": 930,
        "y": 20,
        "wires": []
    },
    {
        "id": "61553f8d.492ec",
        "type": "change",
        "z": "984823b1.a0823",
        "name": "set msg.delay 5000 milliseconds",
        "rules": [
            {
                "t": "set",
                "p": "delay",
                "pt": "msg",
                "to": "5000",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 450,
        "y": 440,
        "wires": [
            [
                "fbac0c39.6c15"
            ]
        ]
    },
    {
        "id": "616b683d.a45448",
        "type": "delay",
        "z": "eef3db45.68d418",
        "name": "",
        "pauseType": "delayv",
        "timeout": "5",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "x": 500,
        "y": 260,
        "wires": [
            [
                "97fc6ed7.653f1"
            ]
        ]
    },
    {
        "id": "97fc6ed7.653f1",
        "type": "change",
        "z": "eef3db45.68d418",
        "name": "set subtopic to /set",
        "rules": [
            {
                "t": "change",
                "p": "topic",
                "pt": "msg",
                "from": "/state",
                "fromt": "str",
                "to": "/set",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 650,
        "y": 260,
        "wires": [
            [
                "3f9ea92d.1ff576",
                "71ca2e8.9d34cd"
            ]
        ]
    },
    {
        "id": "643d5352.6be31c",
        "type": "change",
        "z": "eef3db45.68d418",
        "name": "set msg.payload OFF (we only turn OFF)",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "OFF",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 240,
        "y": 180,
        "wires": [
            [
                "e2ee07ce.3538a8"
            ]
        ]
    },
    {
        "id": "e2ee07ce.3538a8",
        "type": "function",
        "z": "eef3db45.68d418",
        "name": "send [resetmsg,msg]",
        "func": "var resetmsg = Object.assign({},msg);\nresetmsg.reset = true;\n\nreturn [[resetmsg, msg]];",
        "outputs": 1,
        "noerr": 0,
        "x": 500,
        "y": 180,
        "wires": [
            [
                "616b683d.a45448"
            ]
        ]
    },
    {
        "id": "9eb10b40.78de98",
        "type": "change",
        "z": "eef3db45.68d418",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "reset",
                "pt": "msg",
                "to": "true",
                "tot": "bool"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 160,
        "y": 260,
        "wires": [
            [
                "616b683d.a45448"
            ]
        ]
    },
    {
        "id": "71ca2e8.9d34cd",
        "type": "debug",
        "z": "eef3db45.68d418",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "x": 750,
        "y": 120,
        "wires": []
    },
    {
        "id": "65efd1f4.a05a9",
        "type": "switch",
        "z": "eef3db45.68d418",
        "name": "delay not specified",
        "property": "delay",
        "propertyType": "msg",
        "rules": [
            {
                "t": "null"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 570,
        "y": 60,
        "wires": [
            [
                "fe2c8ebe.d683a"
            ],
            [
                "44e7e929.c7ecd8"
            ]
        ],
        "inputLabels": [
            "duration specified"
        ],
        "outputLabels": [
            "no delay specified",
            "delay specified"
        ]
    },
    {
        "id": "fe2c8ebe.d683a",
        "type": "change",
        "z": "eef3db45.68d418",
        "name": "default delay 15 min (900000ms)",
        "rules": [
            {
                "t": "set",
                "p": "delay",
                "pt": "msg",
                "to": "9000000",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 860,
        "y": 60,
        "wires": [
            [
                "44e7e929.c7ecd8"
            ]
        ]
    },
    {
        "id": "aaad89df.694ef8",
        "type": "change",
        "z": "eef3db45.68d418",
        "name": "set payload to dimmer payload.state",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "payload.state",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 330,
        "y": 60,
        "wires": [
            [
                "65efd1f4.a05a9"
            ]
        ]
    },
    {
        "id": "44e7e929.c7ecd8",
        "type": "switch",
        "z": "eef3db45.68d418",
        "name": "ON or OFF",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "ON",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "OFF",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 150,
        "y": 140,
        "wires": [
            [
                "643d5352.6be31c"
            ],
            [
                "9eb10b40.78de98"
            ]
        ],
        "outputLabels": [
            "ON",
            "OFF"
        ]
    },
    {
        "id": "64277f76.76f6a",
        "type": "json",
        "z": "eef3db45.68d418",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 130,
        "y": 60,
        "wires": [
            [
                "aaad89df.694ef8"
            ]
        ]
    },
    {
        "id": "722f8cf0.1401d4",
        "type": "comment",
        "z": "eef3db45.68d418",
        "name": "convert string>json & payload=payload.state",
        "info": "/*\nthese could, of course, alternately be accomplished\nin javascript function nodes as follows:\n*/\n/*\nfirst convert payload\nfrom string representation of JSON\nto JSON object\n*/\nmsg.payload=JSON.parse(msg.payload);\n\n/*\nnext, the dimmer topic of insteon/{device}/state\nreturns like: { \"state\": \"ON\", \"brightness\":175 }\ninstead of just \"ON\" like a switch so we must\neffectively drill down to insteon/{device}/state.state\n(notice state.state)\n*/\nmsg.payload=msg.payload.state;\nreturn msg;\n",
        "x": 250,
        "y": 20,
        "wires": []
    },
    {
        "id": "1bcefa39.0a20a6",
        "type": "comment",
        "z": "eef3db45.68d418",
        "name": "on trigger / off cancel",
        "info": "switch (msg.payload)\n{\n    case \"OFF\":\n        msg.payload = \"CANCEL\";\n        break;\n/*\n    case 1:\n    case \"1\":\n    case true:\n    case \"true\":\n    case \"TRUE\":\n    case \"on\":\n    case \"ON\":\n        msg.payload = \"ON\";\n        break;\n*/        \n    default:\n        msg=null;\n        break;\n}\nreturn msg;\n\n\n/*\nswitch (msg.payload)\n{\n    case 0:\n    case \"0\":\n    case false:\n    case \"false\":\n    case \"FALSE\":\n    case \"off\":\n    case \"OFF\":\n        msg.payload = \"OFF\";\n        break;\n    case 1:\n    case \"1\":\n    case true:\n    case \"true\":\n    case \"TRUE\":\n    case \"on\":\n    case \"ON\":\n        msg.payload = \"ON\";\n        break;\n        \n    default:\n        break;\n}\nreturn msg;\n*/\n\n",
        "x": 180,
        "y": 100,
        "wires": []
    },
    {
        "id": "dc182c7.2a7cfd",
        "type": "comment",
        "z": "eef3db45.68d418",
        "name": "set default duration if non specified",
        "info": "",
        "x": 620,
        "y": 20,
        "wires": []
    },
    {
        "id": "3f9ea92d.1ff576",
        "type": "mqtt out",
        "z": "eef3db45.68d418",
        "name": "",
        "topic": "",
        "qos": "1",
        "retain": "true",
        "broker": "971eda83.260398",
        "x": 810,
        "y": 260,
        "wires": []
    },
    {
        "id": "7a973a7c.cf0e14",
        "type": "comment",
        "z": "eef3db45.68d418",
        "name": "OFF - disable timer",
        "info": "",
        "x": 170,
        "y": 220,
        "wires": []
    },
    {
        "id": "5510afce.c5ebb",
        "type": "comment",
        "z": "eef3db45.68d418",
        "name": "f = replace(\"/state\",\"/set\")",
        "info": "msg.topic=msg.topic.replace(\"/state\",\"/set\")\n",
        "x": 670,
        "y": 220,
        "wires": []
    },
    {
        "id": "bd94c9c5.313818",
        "type": "credentials",
        "z": "88396424.c54498",
        "name": "",
        "props": [
            {
                "value": "headers.Cloud-ID",
                "type": "msg"
            },
            {
                "value": "headers.User",
                "type": "msg"
            },
            {
                "value": "headers.Password",
                "type": "msg"
            }
        ],
        "x": 310,
        "y": 60,
        "wires": [
            [
                "ec0115f7.414128"
            ]
        ]
    },
    {
        "id": "61c5ea11.219ba4",
        "type": "inject",
        "z": "88396424.c54498",
        "name": "initialize",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "x": 100,
        "y": 60,
        "wires": [
            [
                "bd94c9c5.313818"
            ]
        ]
    },
    {
        "id": "ec0115f7.414128",
        "type": "function",
        "z": "88396424.c54498",
        "name": "store in flow context",
        "func": "context.flow.Rainforest = {};\ncontext.flow.Rainforest.headers = msg.headers;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 660,
        "y": 60,
        "wires": [
            [
                "d07c6ad.e3c7298"
            ]
        ]
    },
    {
        "id": "2e8762d3.16a4de",
        "type": "credentials",
        "z": "50466fda.5d00f",
        "name": "",
        "props": [
            {
                "value": "Ecobee.ClientID",
                "type": "global"
            }
        ],
        "x": 230,
        "y": 100,
        "wires": [
            [
                "e31ca9c9.2a72d8"
            ]
        ]
    },
    {
        "id": "8786d87.2882628",
        "type": "credentials",
        "z": "11aaf4c8.4bf33b",
        "name": "",
        "props": [
            {
                "value": "username",
                "type": "msg"
            },
            {
                "value": "password",
                "type": "msg"
            }
        ],
        "x": 550,
        "y": 20,
        "wires": [
            [
                "a93b4b21.260828"
            ]
        ]
    },
    {
        "id": "f8dc33ca.0ec39",
        "type": "inject",
        "z": "11aaf4c8.4bf33b",
        "name": "initialize",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "x": 200,
        "y": 20,
        "wires": [
            [
                "8786d87.2882628"
            ]
        ]
    },
    {
        "id": "cad855c8.c1d138",
        "type": "inject",
        "z": "11aaf4c8.4bf33b",
        "name": "",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "x": 140,
        "y": 600,
        "wires": [
            [
                "971e7d8d.3ce8f"
            ]
        ]
    },
    {
        "id": "971e7d8d.3ce8f",
        "type": "function",
        "z": "11aaf4c8.4bf33b",
        "name": "",
        "func": "msg = context.flow.MyQ;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 290,
        "y": 600,
        "wires": [
            [
                "b1885fd7.f94e7"
            ]
        ]
    },
    {
        "id": "b1885fd7.f94e7",
        "type": "debug",
        "z": "11aaf4c8.4bf33b",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "x": 450,
        "y": 600,
        "wires": []
    },
    {
        "id": "a93b4b21.260828",
        "type": "function",
        "z": "11aaf4c8.4bf33b",
        "name": "",
        "func": "context.flow.MyQ = {\n    \"payload\" : {\n        \"username\" : msg.username,\n        \"password\" : msg.password\n    }\n};\n\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "x": 710,
        "y": 20,
        "wires": [
            []
        ]
    },
    {
        "id": "84c4a650.1554a8",
        "type": "mqtt out",
        "z": "11aaf4c8.4bf33b",
        "name": "",
        "topic": "",
        "qos": "",
        "retain": "",
        "broker": "971eda83.260398",
        "x": 970,
        "y": 440,
        "wires": []
    },
    {
        "id": "1dc3ed7a.081c13",
        "type": "mqtt out",
        "z": "c201e10a.3d66f",
        "name": "local broker",
        "topic": "",
        "qos": "0",
        "retain": "false",
        "broker": "971eda83.260398",
        "x": 590,
        "y": 160,
        "wires": []
    },
    {
        "id": "3d4e0c8.16e4af4",
        "type": "mqtt in",
        "z": "e8223701.eebbe8",
        "name": "",
        "topic": "insteon/#",
        "qos": "2",
        "broker": "971eda83.260398",
        "x": 80,
        "y": 380,
        "wires": [
            [
                "ef1bb868.c53928",
                "4bfc0d3e.407e84"
            ]
        ]
    },
    {
        "id": "ae758271.b8f4b",
        "type": "debug",
        "z": "11aaf4c8.4bf33b",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "x": 780,
        "y": 220,
        "wires": []
    },
    {
        "id": "6cfbef80.77ca7",
        "type": "rbe",
        "z": "11aaf4c8.4bf33b",
        "name": "",
        "func": "rbe",
        "gap": "",
        "start": "",
        "inout": "out",
        "property": "payload",
        "x": 860,
        "y": 440,
        "wires": [
            [
                "84c4a650.1554a8"
            ]
        ]
    },
    {
        "id": "450cd6f0.b7c678",
        "type": "function",
        "z": "e8223701.eebbe8",
        "name": "prefix tapia/home/",
        "func": "var prefix = \"tapia/home/\";\nif (msg.topic.startsWith(prefix)){\n    \n}else{\n    msg.topic = prefix + msg.topic;\n}\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "x": 790,
        "y": 380,
        "wires": [
            [
                "c73faab4.97eef8"
            ]
        ]
    },
    {
        "id": "b802be46.082e7",
        "type": "function",
        "z": "e8223701.eebbe8",
        "name": "decomplexificate dimmer state",
        "func": "/*\ninsteon-mqtt dimmer state contains complex json\n    insteon/mydimmer/state='{\"state\":\"ON\",\"Brightness\":255}''\nwe are breaking this down to be like switches where:\n    insteon/myswitch/state = \"ON\"\n*/\n\nvar suffix = \"/state\";\n\nif (msg.topic && msg.topic.endsWith(suffix) && (msg.payload !== null) && (msg.payload !== \"\") && (typeof msg.payload == \"object\") && (msg.payload.state) && (msg.payload.brightness)) {\n    var newmsg = [];\n    var prefix = msg.topic.replace(suffix,\"\")+\"/\";\n    for(var propertyName in msg.payload) {\n        newmsg.push({\n            topic : prefix  + propertyName,\n            payload : msg.payload[propertyName]\n        });\n    }\n    msg = newmsg;\n    return [msg];\n} else {\n    \n}\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "x": 550,
        "y": 380,
        "wires": [
            [
                "450cd6f0.b7c678"
            ]
        ]
    },
    {
        "id": "c73faab4.97eef8",
        "type": "debug",
        "z": "e8223701.eebbe8",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "x": 950,
        "y": 380,
        "wires": []
    },
    {
        "id": "60c14a65.0287d4",
        "type": "json",
        "z": "e8223701.eebbe8",
        "name": "",
        "property": "payload",
        "action": "obj",
        "pretty": false,
        "x": 350,
        "y": 380,
        "wires": [
            [
                "b802be46.082e7"
            ]
        ]
    },
    {
        "id": "ef1bb868.c53928",
        "type": "debug",
        "z": "e8223701.eebbe8",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "x": 950,
        "y": 420,
        "wires": []
    },
    {
        "id": "e5cf2007.dc6b8",
        "type": "credentials",
        "z": "5c25c3f4.74d4ac",
        "name": "",
        "props": [
            {
                "value": "username",
                "type": "msg"
            },
            {
                "value": "password",
                "type": "msg"
            }
        ],
        "x": 470,
        "y": 20,
        "wires": [
            [
                "8668c6d2.d2b728"
            ]
        ]
    },
    {
        "id": "4a0855af.2f68dc",
        "type": "inject",
        "z": "5c25c3f4.74d4ac",
        "name": "initialize",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "x": 280,
        "y": 20,
        "wires": [
            [
                "e5cf2007.dc6b8"
            ]
        ]
    },
    {
        "id": "4bfc0d3e.407e84",
        "type": "switch",
        "z": "e8223701.eebbe8",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "cont",
                "v": "{",
                "vt": "str"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 230,
        "y": 380,
        "wires": [
            [
                "60c14a65.0287d4"
            ],
            [
                "b802be46.082e7"
            ]
        ]
    },
    {
        "id": "4917e4e5.06bbbc",
        "type": "credentials",
        "z": "e8223701.eebbe8",
        "name": "ENTER YOUR Wonderware Integration (REST API Data Retreival) Bearer Token HERE",
        "props": [
            {
                "value": "Authorization",
                "type": "msg"
            }
        ],
        "x": 530,
        "y": 560,
        "wires": [
            [
                "307e7272.0da96e"
            ]
        ]
    },
    {
        "id": "12ed0d8a.fd29a2",
        "type": "comment",
        "z": "e8223701.eebbe8",
        "name": "Read REST API",
        "info": "",
        "x": 100,
        "y": 560,
        "wires": []
    },
    {
        "id": "43ec985e.08bb38",
        "type": "http request",
        "z": "e8223701.eebbe8",
        "name": "",
        "method": "use",
        "ret": "txt",
        "url": "",
        "tls": "",
        "x": 750,
        "y": 640,
        "wires": [
            [
                "5825d936.db4968"
            ]
        ]
    },
    {
        "id": "1fb01f.a409cfe1",
        "type": "inject",
        "z": "e8223701.eebbe8",
        "name": "",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "x": 100,
        "y": 600,
        "wires": [
            [
                "4917e4e5.06bbbc"
            ]
        ]
    },
    {
        "id": "9a406cda.bd797",
        "type": "function",
        "z": "e8223701.eebbe8",
        "name": "move Authorization to headers",
        "func": "//msg.url = \"https://online.wonderware.com/apis/Historian/v2/\";\n//msg.method = \"GET\";\n//msg.headers = {};\nmsg.headers.Authorization = msg.Authorization;  //copy Authorization to be under headers\ndelete msg.Authorization;                       // and remove from old location\n//msg.headers.ContentType = \"application/json\";\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "x": 350,
        "y": 640,
        "wires": [
            [
                "43ec985e.08bb38"
            ]
        ]
    },
    {
        "id": "5825d936.db4968",
        "type": "debug",
        "z": "e8223701.eebbe8",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "x": 950,
        "y": 640,
        "wires": []
    },
    {
        "id": "dbb8355c.ae2f88",
        "type": "change",
        "z": "e8223701.eebbe8",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "method",
                "pt": "msg",
                "to": "GET",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 440,
        "y": 600,
        "wires": [
            [
                "7e76212d.f8ed5"
            ]
        ]
    },
    {
        "id": "307e7272.0da96e",
        "type": "change",
        "z": "e8223701.eebbe8",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "url",
                "pt": "msg",
                "to": "https://online.wonderware.com/apis/Historian/v2/",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 290,
        "y": 600,
        "wires": [
            [
                "dbb8355c.ae2f88"
            ]
        ]
    },
    {
        "id": "7e76212d.f8ed5",
        "type": "change",
        "z": "e8223701.eebbe8",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "headers.ContentType",
                "pt": "msg",
                "to": "application/json",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 650,
        "y": 600,
        "wires": [
            [
                "9a406cda.bd797"
            ]
        ]
    },
    {
        "id": "872c5b0d.507928",
        "type": "debug",
        "z": "88396424.c54498",
        "name": "",
        "active": true,
        "console": "false",
        "complete": "true",
        "x": 910,
        "y": 460,
        "wires": []
    }
]